{"version":3,"file":"mod.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../base/binary/lib/getter.js","../base/binary/lib/getter.accessor.js","../base/binary/lib/setter.js","../base/binary/lib/setter.accessor.js","../base/binary/lib/main.js","../base/binary/lib/accessors.js","../base/binary/lib/binary.js","../base/binary/lib/index.js","../base/binary/lib/ndarray.js","../base/binary/lib/accessors.ndarray.js","../base/binary/lib/binary.ndarray.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/symbol/ctor/lib/main.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/main.js","../node_modules/@stdlib/boolean/ctor/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/global.js","../node_modules/@stdlib/utils/global/lib/global_this.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/assert/tools/array-function/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/number/ctor/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/assert/is-typed-array-like/lib/main.js","../node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin.js","../node_modules/@stdlib/utils/keys/lib/has_builtin.js","../node_modules/@stdlib/assert/is-arguments/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/detect.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/index.js","../node_modules/@stdlib/assert/is-arguments/lib/polyfill.js","../node_modules/@stdlib/constants/uint32/max/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils/keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils/noop/lib/main.js","../node_modules/@stdlib/utils/keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../node_modules/@stdlib/utils/index-of/lib/main.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils/keys/lib/window.js","../node_modules/@stdlib/utils/keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils/keys/lib/has_window.js","../node_modules/@stdlib/utils/keys/lib/main.js","../node_modules/@stdlib/utils/keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils/keys/lib/polyfill.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/object/ctor/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/utils/get-prototype-of/lib/main.js","../node_modules/@stdlib/utils/object-inverse/lib/main.js","../dtypes/lib/main.js","../node_modules/@stdlib/ndarray/dtypes/lib/main.js","../node_modules/@stdlib/ndarray/dtypes/lib/enum.js","../node_modules/@stdlib/ndarray/dtypes/lib/index.js","../node_modules/@stdlib/ndarray/dtypes/lib/assign.js","../dtypes/lib/enum.js","../dtypes/lib/index.js","../dtypes/lib/assign.js","../base/dtype-enum2str/lib/main.js","../base/dtype-str2enum/lib/main.js","../base/dtype-resolve-enum/lib/main.js","../node_modules/@stdlib/assert/is-float32array/lib/main.js","../node_modules/@stdlib/assert/has-float32array-support/lib/float32array.js","../node_modules/@stdlib/array/float32/lib/main.js","../node_modules/@stdlib/array/float32/lib/index.js","../node_modules/@stdlib/assert/has-float32array-support/lib/main.js","../node_modules/@stdlib/array/float32/lib/polyfill.js","../base/reinterpret-complex64/lib/main.js","../node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/array/float64/lib/main.js","../node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/array/float64/lib/polyfill.js","../base/reinterpret-complex128/lib/main.js","../base/binary-addon-dispatch/lib/main.js","../base/offset-view/lib/main.js","../base/min-view-buffer-index/lib/main.js","../base/binary-addon-dispatch/lib/ndarray.js","../base/binary-addon-dispatch/lib/index.js","../node_modules/@stdlib/strided/dtypes/lib/main.js","../node_modules/@stdlib/strided/dtypes/lib/enum.js","../node_modules/@stdlib/strided/dtypes/lib/index.js","../node_modules/@stdlib/strided/dtypes/lib/assign.js","../node_modules/@stdlib/ndarray/base/dtype-enum2str/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype-str2enum/lib/main.js","../node_modules/@stdlib/ndarray/base/dtype-resolve-str/lib/main.js","../node_modules/@stdlib/ndarray/promotion-rules/lib/main.js","../node_modules/@stdlib/ndarray/safe-casts/lib/main.js","../base/dtype-resolve-str/lib/main.js","../base/binary-dtype-signatures/lib/main.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/main.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/polyfill.js","../node_modules/@stdlib/number/float64/base/to-float32/lib/index.js","../node_modules/@stdlib/complex/float32/lib/main.js","../node_modules/@stdlib/complex/float64/lib/main.js","../node_modules/@stdlib/complex/float32/lib/tostring.js","../node_modules/@stdlib/complex/float32/lib/tojson.js","../node_modules/@stdlib/complex/float64/lib/tostring.js","../node_modules/@stdlib/complex/float64/lib/tojson.js","../node_modules/@stdlib/complex/base/wrap-function/lib/main.js","../base/binary-signature-callbacks/lib/main.js","../base/cmap/lib/main.js","../base/dmap/lib/main.js","../base/dmap2/lib/main.js","../base/dmskmap/lib/main.js","../base/dmskmap2/lib/main.js","../base/map-by/lib/main.js","../base/map-by2/lib/main.js","../base/cmap/lib/index.js","../base/cmap/lib/ndarray.js","../base/dmap/lib/index.js","../base/dmap/lib/ndarray.js","../base/dmap2/lib/index.js","../base/dmap2/lib/ndarray.js","../base/dmskmap/lib/index.js","../base/dmskmap/lib/ndarray.js","../base/dmskmap2/lib/index.js","../base/dmskmap2/lib/ndarray.js","../base/map-by/lib/index.js","../base/map-by/lib/ndarray.js","../base/map-by2/lib/index.js","../base/map-by2/lib/ndarray.js","../node_modules/@stdlib/ndarray/base/dtypes2signatures/lib/main.js","../node_modules/@stdlib/assert/is-array-like-object/lib/main.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../base/mskunary/lib/getter.js","../base/mskunary/lib/getter.accessor.js","../base/mskunary/lib/setter.js","../base/mskunary/lib/setter.accessor.js","../base/mskunary/lib/main.js","../base/mskunary/lib/accessors.js","../base/mskunary/lib/unary.js","../base/mskunary/lib/index.js","../base/mskunary/lib/ndarray.js","../base/mskunary/lib/accessors.ndarray.js","../base/mskunary/lib/unary.ndarray.js","../base/mskunary-addon-dispatch/lib/main.js","../base/mskunary-addon-dispatch/lib/ndarray.js","../base/mskunary-dtype-signatures/lib/main.js","../base/mskunary-addon-dispatch/lib/index.js","../node_modules/@stdlib/complex/base/cast-return/lib/main.js","../base/mskunary-signature-callbacks/lib/main.js","../base/nullary/lib/setter.js","../base/nullary/lib/setter.accessor.js","../base/nullary/lib/main.js","../base/nullary/lib/accessors.js","../base/nullary/lib/nullary.js","../base/nullary/lib/index.js","../base/nullary/lib/ndarray.js","../base/nullary/lib/accessors.ndarray.js","../base/nullary/lib/nullary.ndarray.js","../base/nullary-addon-dispatch/lib/main.js","../base/nullary-addon-dispatch/lib/ndarray.js","../base/quaternary/lib/main.js","../base/quinary/lib/main.js","../base/smap/lib/main.js","../base/smap2/lib/main.js","../base/smskmap/lib/main.js","../base/smskmap2/lib/main.js","../base/ternary/lib/main.js","../base/unary/lib/getter.js","../base/unary/lib/getter.accessor.js","../base/unary/lib/setter.js","../base/unary/lib/setter.accessor.js","../base/unary/lib/main.js","../base/unary/lib/accessors.js","../base/unary/lib/unary.js","../base/nullary-addon-dispatch/lib/index.js","../base/quaternary/lib/index.js","../base/quaternary/lib/ndarray.js","../base/quinary/lib/index.js","../base/quinary/lib/ndarray.js","../base/smap/lib/index.js","../base/smap/lib/ndarray.js","../base/smap2/lib/index.js","../base/smap2/lib/ndarray.js","../base/smskmap/lib/index.js","../base/smskmap/lib/ndarray.js","../base/smskmap2/lib/index.js","../base/smskmap2/lib/ndarray.js","../base/ternary/lib/index.js","../base/ternary/lib/ndarray.js","../base/unary/lib/index.js","../base/unary/lib/ndarray.js","../base/unary/lib/accessors.ndarray.js","../base/unary/lib/unary.ndarray.js","../base/unary-addon-dispatch/lib/main.js","../base/unary-addon-dispatch/lib/ndarray.js","../base/unary-dtype-signatures/lib/main.js","../base/unary-addon-dispatch/lib/index.js","../base/unary-signature-callbacks/lib/main.js","../base/zmap/lib/main.js","../base/zmap/lib/index.js","../base/zmap/lib/ndarray.js","../base/lib/index.js","../node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../base/max-view-buffer-index/lib/main.js","../base/meta-data-props/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../node_modules/@stdlib/assert/is-function-array/lib/index.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/main.js","../node_modules/@stdlib/assert/is-array-like/lib/main.js","../node_modules/@stdlib/math/base/special/abs/lib/main.js","../dispatch/lib/index_of_types.js","../dispatch/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\nimport zeroPad from './zero_pad.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNumber from './is_number.js';\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport formatInteger from './format_integer.js';\nimport isString from './is_string.js';\nimport formatDouble from './format_double.js';\nimport spacePad from './space_pad.js';\nimport zeroPad from './zero_pad.js';\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nexport default formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport interpolate from './../../base/format-interpolate';\nimport tokenize from './../../base/format-tokenize';\nimport isString from './is_string.js';\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\targs = new Array( arguments.length );\n\targs[ 0 ] = tokens;\n\tfor ( i = 1; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nexport default format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* import defineProperty from '@stdlib/utils/define-property';\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nimport hasDefinePropertySupport from './has_define_property_support.js';\nimport builtin from './builtin.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './define_property.js';\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './binary.js';\nimport accessors from './accessors.js';\nimport getIndexed from './getter.js';\nimport getAccessor from './getter.accessor.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing two input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* binary( [ x, y, z ], shape, strides, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction binary( arrays, shape, strides, fcn ) {\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txget = getAccessor;\n\t}\n\ty = arrays[ 1 ];\n\tif ( y.get && y.set ) {\n\t\tyget = getAccessor;\n\t}\n\tz = arrays[ 2 ];\n\tif ( z.get && z.set ) {\n\t\tzset = setAccessor;\n\t}\n\tif ( xget || yget || zset ) {\n\t\txget = xget || getIndexed;\n\t\tyget = yget || getIndexed;\n\t\tzset = zset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, [ xget, yget, zset ], fcn );\n\t}\n\treturn strided( arrays, shape, strides, fcn );\n}\n\n\n// EXPORTS //\n\nexport default binary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing two input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the input and output arrays\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* function get( buf, idx ) {\n*     return buf[ idx ] * 2.0;\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* binary( [ x, y, z ], shape, strides, [ get, get, set ], add );\n*\n* console.log( z );\n* // => <Float64Array>[ 4.0, 8.0, 12.0, 16.0, 20.0 ]\n*/\nfunction binary( arrays, shape, strides, accessors, fcn ) {\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( sz < 0 ) {\n\t\tiz = (1-N) * sz;\n\t} else {\n\t\tiz = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\txget = accessors[ 0 ];\n\tyget = accessors[ 1 ];\n\tzset = accessors[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tzset( z, iz, fcn( xget( x, ix ), yget( y, iy ) ) );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing two input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* binary( [ x, y, z ], shape, strides, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction binary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( sz < 0 ) {\n\t\tiz = (1-N) * sz;\n\t} else {\n\t\tiz = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a binary callback to strided input array elements and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/binary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import binary from '@stdlib/strided/base/binary';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* binary( [ x, y, z ], shape, strides, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import binary from '@stdlib/strided/base/binary';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* binary.ndarray( [ x, y, z ], shape, strides, offsets, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './binary.ndarray.js';\nimport accessors from './accessors.ndarray.js';\nimport getIndexed from './getter.js';\nimport getAccessor from './getter.accessor.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing two input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* binary( [ x, y, z ], shape, strides, offsets, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction binary( arrays, shape, strides, offsets, fcn ) {\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txget = getAccessor;\n\t}\n\ty = arrays[ 1 ];\n\tif ( y.get && y.set ) {\n\t\tyget = getAccessor;\n\t}\n\tz = arrays[ 2 ];\n\tif ( z.get && z.set ) {\n\t\tzset = setAccessor;\n\t}\n\tif ( xget || yget || zset ) {\n\t\txget = xget || getIndexed;\n\t\tyget = yget || getIndexed;\n\t\tzset = zset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, offsets, [ xget, yget, zset ], fcn ); // eslint-disable-line max-len\n\t}\n\treturn strided( arrays, shape, strides, offsets, fcn );\n}\n\n\n// EXPORTS //\n\nexport default binary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing two input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the input and output arrays\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* function get( buf, idx ) {\n*     return buf[ idx ] * 2.0;\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* binary( [ x, y, z ], shape, strides, offsets, [ get, get, set ], add );\n*\n* console.log( z );\n* // => <Float64Array>[ 4.0, 8.0, 12.0, 16.0, 20.0 ]\n*/\nfunction binary( arrays, shape, strides, offsets, accessors, fcn ) {\n\tvar xget;\n\tvar yget;\n\tvar zset;\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tiz = offsets[ 2 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\txget = accessors[ 0 ];\n\tyget = accessors[ 1 ];\n\tzset = accessors[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tzset( z, iz, fcn( xget( x, ix ), yget( y, iy ) ) );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing two input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* binary( [ x, y, z ], shape, strides, offsets, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction binary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tiz = offsets[ 2 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nexport default RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasSymbols from './../../has-symbol-support';\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nexport default hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nexport default toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nexport default hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar Sym = ( typeof Symbol === 'function' ) ? Symbol : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Sym;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Symbol from '@stdlib/symbol/ctor';\n\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nexport default toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* import nativeClass from '@stdlib/utils/native-class';\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nimport hasToStringTag from '@stdlib/assert/has-tostringtag-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main;\nif ( hasToStringTag() ) {\n\tmain = polyfill;\n} else {\n\tmain = builtin;\n}\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport toStringTag from './tostringtag.js';\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toStr from './tostring.js';\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nexport default nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean.\n*\n* @name Boolean\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {(boolean|Boolean)} boolean\n*\n* @example\n* var b = Boolean( null );\n* // returns false\n*\n* b = Boolean( [] );\n* // returns true\n*\n* b = Boolean( {} );\n* // returns true\n*\n* @example\n* var b = new Boolean( false );\n* // returns <Boolean>\n*/\nvar Bool = Boolean; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport Boolean from '@stdlib/boolean/ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n*\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func, stdlib/require-globals\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import isBoolean from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* import Boolean from '@stdlib/boolean/ctor';\n* import { isObject as isBoolean } from '@stdlib/assert/is-boolean';\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof global === 'object' ) ? global : null;\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof globalThis === 'object' ) ? globalThis : null; // eslint-disable-line no-undef\n\n\n// EXPORTS //\n\nexport default obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getGlobal from './../../../global';\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nexport default nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\nimport getThis from './codegen.js';\nimport Self from './self.js';\nimport Win from './window.js';\nimport Global from './global.js';\nimport GlobalThis from './global_this.js';\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: 2020 revision of ECMAScript standard\n\tif ( GlobalThis ) {\n\t\treturn GlobalThis;\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nexport default getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nexport default reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reFunctionName from './main.js';\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nexport default RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* import reFunctionName from '@stdlib/regexp/function-name';\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport REGEXP from './regexp.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nexport default f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport { REGEXP as RE } from '@stdlib/regexp/function-name';\nimport isBuffer from '@stdlib/assert/is-buffer';\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nexport default constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from './../../is-object-like';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* import isObjectLike from '@stdlib/assert/is-object-like';\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* import { isObjectLikeArray as isObjectLike } from '@stdlib/assert/is-object-like';\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport arrayfun from './../../tools/array-function';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar isObjectLikeArray = arrayfun( main );\n\n\n// MAIN //\n\nsetReadOnly( main, 'isObjectLikeArray', isObjectLikeArray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../../is-array';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* import isOdd from '@stdlib/assert/is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* import typeOf from '@stdlib/utils/type-of';\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nimport usePolyfill from './check.js';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : builtin;\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport RE from './fixtures/re.js';\nimport nodeList from './fixtures/nodelist.js';\nimport typedarray from './fixtures/typedarray.js';\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ctorName from './../../constructor-name';\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nexport default typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport typeOf from '@stdlib/utils/type-of';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nexport default isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport Number from '@stdlib/number/ctor';\nimport test from './try2serialize.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport toString from './tostring.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* import isNumber from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNumber } from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNumber } from '@stdlib/assert/is-number';\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* import FLOAT64_PINF from '@stdlib/constants/float64/pinf';\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* import FLOAT64_NINF from '@stdlib/constants/float64/ninf';\n* // returns -Infinity\n*/\n\n// MODULES //\n\nimport Number from '@stdlib/number/ctor';\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nexport default FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from './../../../../base/special/floor';\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport isInt from '@stdlib/math/base/assert/is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\nimport isInt from './integer.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* import isInteger from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* import { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* import { isObject as isInteger } from '@stdlib/assert/is-integer';\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* import isNonNegativeInteger from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from './../../is-nonnegative-integer';\nimport MAX from '@stdlib/constants/array/max-typed-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is typed-array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is typed-array-like\n*\n* @example\n* var arr = {\n*\t'BYTES_PER_ELEMENT': 8,\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10\n* };\n* var val = isTypedArrayLike( arr );\n* // returns true\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var val = isTypedArrayLike( new Int8Array( 4 ) );\n* // returns true\n*\n* @example\n* var val = isTypedArrayLike( [] );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( {} );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( null );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( 'beep' );\n* // returns false\n*/\nfunction isTypedArrayLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\tisNonNegativeInteger( value.length ) &&\n\t\tvalue.length <= MAX &&\n\t\ttypeof value.BYTES_PER_ELEMENT === 'number' &&\n\t\ttypeof value.byteOffset === 'number' &&\n\t\ttypeof value.byteLength === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* import MAX_TYPED_ARRAY_LENGTH from '@stdlib/constants/array/max-typed-array-length';\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nexport default MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from './main.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nexport default valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasToStringTag from './../../has-tostringtag-support';\nimport nativeClass from '@stdlib/utils/native-class';\nimport test from './try2valueof.js';\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport valueOf from './valueof.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from './../../is-number';\nimport isNan from '@stdlib/math/base/assert/is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isNumber } from './../../is-number';\nimport isNan from '@stdlib/math/base/assert/is-nan';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* import isString from '@stdlib/assert/is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* import { isObject as isString } from '@stdlib/assert/is-string';\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* import { isPrimitive as isString } from '@stdlib/assert/is-string';\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* import isnan from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isnan } from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* import { isObject as isnan } from '@stdlib/assert/is-nan';\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnum from './native.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isString from './../../is-string';\nimport { isPrimitive as isnan } from './../../is-nan';\nimport { isPrimitive as isInteger } from './../../is-integer';\nimport isEnum from './native.js';\nimport hasStringEnumBug from './has_string_enumerability_bug.js';\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* import isArguments from '@stdlib/assert/is-arguments';\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport hasArgumentsClass from './detect.js';\nimport main from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from './../../has-own-property';\nimport isEnumerableProperty from './../../is-enumerable-property';\nimport isArray from './../../is-array';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/uint32/max';\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants/uint32/max\n* @type {uinteger32}\n*\n* @example\n* import UINT32_MAX from '@stdlib/constants/uint32/max';\n* // returns 4294967295\n*/\n\n\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar UINT32_MAX = 4294967295;\n\n\n// EXPORTS //\n\nexport default UINT32_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArguments from '@stdlib/assert/is-arguments';\nimport builtin from './builtin.js';\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\nimport noop from './../../noop';\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nexport default noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEnumerableProperty from '@stdlib/assert/is-enumerable-property';\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-typed-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nexport default isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nexport default w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport indexOf from './../../index-of';\nimport typeOf from './../../type-of';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport EXCLUDED_KEYS from './excluded_keys.json';\nimport win from './window.js';\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasArgumentsBug from './has_arguments_bug.js';\nimport HAS_BUILTIN from './has_builtin.js';\nimport builtin from './builtin.js';\nimport wrapper from './builtin_wrapper.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport keys from './builtin.js';\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nexport default check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isArguments from '@stdlib/assert/is-arguments';\nimport HAS_ENUM_PROTO_BUG from './has_enumerable_prototype_bug.js';\nimport HAS_NON_ENUM_PROPS_BUG from './has_non_enumerable_properties_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype_wrapper.js';\nimport NON_ENUMERABLE from './non_enumerable.json';\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasAutomationEqualityBug from './has_automation_equality_bug.js';\nimport isConstructorPrototype from './is_constructor_prototype.js';\nimport HAS_WINDOW from './has_window.js';\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object.\n*\n* @name Object\n* @constructor\n* @type {Function}\n* @param {*} value - input value\n* @returns {Object} object\n*\n* @example\n* var o = new Object( null );\n* // returns {}\n*\n* @example\n* var o = new Object( 5.0 );\n* // returns <Number>\n*\n* @example\n* var o = new Object( 'beep' );\n* // returns <String>\n*\n* @example\n* var o1 = {};\n*\n* var o2 = new Object( o1 );\n* // returns {}\n*\n* var bool = ( o1 === o2 );\n* // returns true\n*/\nvar Obj = Object; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default Obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport builtin from './native.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from './../../native-class';\nimport getProto from './proto.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nexport default getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from './../../is-object';\nimport isFunction from './../../is-function';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport hasOwnProp from './../../has-own-property';\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from './../../is-array';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Object from '@stdlib/object/ctor';\nimport getProto from './detect.js';\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nexport default getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from './../../keys';\nimport isArray from '@stdlib/assert/is-array';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport isObjectLike from '@stdlib/assert/is-object-like';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} second argument must an an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invert( obj, opts ) {\n\tvar allowDupes = true;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object (except null). Value: `%s`.', obj ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'duplicates', allowDupes ) );\n\t\t\t}\n\t\t}\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = obj[ key ];\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tout[ obj[ key ] ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default invert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of strided array data type strings.\n*\n* @returns {StringArray} list of strided array data type strings\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types.\n*\n* @returns {StringArray} list of ndarray data types\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/empty-line-before-comment */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported data type strings to enumeration constants.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of ndarray objects. While certain dtypes, such as \"generic\" and \"binary\", have special behavior in JavaScript, they do not have a direct complement in C.\n*\n* @private\n* @returns {Object} object mapping supported dtypes to enumeration constants\n*\n* @example\n* var table = enumeration();\n* // returns <Object>\n*/\nfunction enumeration() {\n\t// NOTE: the following should match the C `dtypes.h` enumeration!!!!\n\treturn {\n\t\t// Boolean data types:\n\t\t'bool': 0,\n\n\t\t// Integer data types:\n\t\t'int8': 1,\n\t\t'uint8': 2,\n\t\t'uint8c': 3,\n\t\t'int16': 4,\n\t\t'uint16': 5,\n\t\t'int32': 6,\n\t\t'uint32': 7,\n\t\t'int64': 8,\n\t\t'uint64': 9,\n\t\t// 'int128': 10, // uncomment once supported\n\t\t// 'uint128': 11,\n\t\t// 'int256': 12,\n\t\t// 'uint256': 13,\n\n\t\t// Floating-point data types:\n\t\t// 'float16': 14,\n\t\t// 'bfloat16': 15,\n\t\t'float32': 10,\n\t\t'float64': 11,\n\t\t// 'float128': 18, // uncomment once supported\n\n\t\t// Complex floating-point number data types:\n\t\t'complex64': 12,\n\t\t'complex128': 13,\n\n\t\t// Data type for \"binary\" data (i.e., data stored in a Node.js `Buffer` object):\n\t\t'binary': 14,\n\n\t\t// Data type for \"generic\" JavaScript values (objects):\n\t\t'generic': 15,\n\n\t\t// Define a signaling value which is guaranteed not to be a valid type enumeration value:\n\t\t'notype': 17,\n\n\t\t// Indicate the start of user defined type numbers (leaving room for type growth above):\n\t\t'userdefined_type': 256\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumeration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of ndarray data types.\n*\n* @module @stdlib/ndarray/dtypes\n*\n* @example\n* import dtypes from '@stdlib/ndarray/dtypes';\n*\n* var list = dtypes();\n* // returns [...]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport enumeration from './enum.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\nassign( main, enumeration() );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\nimport objectKeys from '@stdlib/utils/keys';\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { enum as ndtypes } from '@stdlib/ndarray/dtypes';\n\n\n// VARIABLES //\n\nvar dt = ndtypes();\n\n\n// MAIN //\n\n/**\n* Returns an object mapping supported data strings to enumeration constants for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of strided arrays.\n*\n* @private\n* @returns {Object} object mapping supported data strings strings to enumeration constants\n*\n* @example\n* var table = enumeration();\n* // returns <Object>\n*/\nfunction enumeration() {\n\t// NOTE: the returned object should match the C `dtypes.h` enumeration!!!!\n\treturn {\n\t\t'bool': dt[ 'bool' ],\n\n\t\t'int8': dt[ 'int8' ],\n\t\t'uint8': dt[ 'uint8' ],\n\t\t'uint8c': dt[ 'uint8c' ],\n\t\t'int16': dt[ 'int16' ],\n\t\t'uint16': dt[ 'uint16' ],\n\t\t'int32': dt[ 'int32' ],\n\t\t'uint32': dt[ 'uint32' ],\n\t\t'int64': dt[ 'int64' ],\n\t\t'uint64': dt[ 'uint64' ],\n\n\t\t'float32': dt[ 'float32' ],\n\t\t'float64': dt[ 'float64' ],\n\n\t\t'complex64': dt[ 'complex64' ],\n\t\t'complex128': dt[ 'complex128' ],\n\n\t\t'binary': dt[ 'binary' ],\n\n\t\t'generic': dt[ 'generic' ],\n\n\t\t'notype': dt[ 'notype' ],\n\n\t\t'userdefined_type': dt[ 'userdefined_type' ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumeration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of strided array data types.\n*\n* @module @stdlib/strided/dtypes\n*\n* @example\n* import dtypes from '@stdlib/strided/dtypes';\n*\n* var list = dtypes();\n* // returns [...]\n*\n* @example\n* import { enum as enumeration } from '@stdlib/strided/dtypes';\n*\n* var table = enumeration();\n* // returns {...}\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport enumeration from './enum.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\nassign( main, enumeration() );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\nimport objectKeys from '@stdlib/utils/keys';\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectInverse from '@stdlib/utils/object-inverse';\nimport { enum as enumeration } from './../../../dtypes';\n\n\n// VARIABLES //\n\nvar hash = objectInverse( enumeration(), {\n\t'duplicates': false\n});\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with a strided array data type enumeration constant.\n*\n* @param {integer} dtype - data type enumeration constant\n* @returns {(string|null)} data type string or null\n*\n* @example\n* import str2enum from '@stdlib/strided/base/dtype-str2enum';\n*\n* var v = str2enum( 'float64' );\n* // returns <number>\n*\n* var dt = enum2str( v );\n* // returns 'float64'\n*/\nfunction enum2str( dtype ) {\n\tvar v = hash[ dtype ];\n\treturn ( typeof v === 'string' ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nexport default enum2str;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { enum as enumeration } from './../../../dtypes';\n\n\n// VARIABLES //\n\nvar ENUM = enumeration();\n\n\n// MAIN //\n\n/**\n* Returns the enumeration constant associated with a strided array data type string.\n*\n* ## Notes\n*\n* -   Downstream consumers of this function should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the function should be used in an opaque manner.\n*\n* @param {string} dtype - data type string\n* @returns {(integer|null)} integer value or null\n*\n* @example\n* var v = str2enum( 'int8' );\n* // returns <number>\n*/\nfunction str2enum( dtype ) {\n\tvar v = ENUM[ dtype ];\n\treturn ( typeof v === 'number' ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nexport default str2enum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2str from './../../../base/dtype-enum2str';\nimport str2enum from './../../../base/dtype-str2enum';\n\n\n// MAIN //\n\n/**\n* Returns the enumeration constant associated with a supported strided array data type value.\n*\n* ## Notes\n*\n* -   Downstream consumers of this function should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the function should be used in an opaque manner.\n*\n* @param {*} dtype - data type value\n* @returns {(integer|null)} enumeration constant or null\n*\n* @example\n* var v = resolve( 'int8' );\n* // returns <number>\n*/\nfunction resolve( dtype ) {\n\tvar t = ( typeof dtype );\n\tif ( t === 'number' ) {\n\t\treturn ( enum2str( dtype ) ) ? dtype : null;\n\t}\n\tif ( t === 'string' ) {\n\t\treturn str2enum( dtype );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default resolve;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* import ctor from '@stdlib/array/float32';\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nimport hasFloat32ArraySupport from '@stdlib/assert/has-float32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat32Array from './../../is-float32array';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport GlobalFloat32Array from './float32array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex64Array` as a `Float32Array`.\n*\n* @param {Complex64Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float32Array} `Float32Array` view\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n*\n* var x = new Complex64Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float32Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float32Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nativeClass from '@stdlib/utils/native-class';\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* import ctor from '@stdlib/array/float64';\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nimport hasFloat64ArraySupport from '@stdlib/assert/has-float64array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat64Array from './../../is-float64array';\nimport GlobalFloat64Array from './float64array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from '@stdlib/array/float64';\n\n\n// MAIN //\n\n/**\n* Reinterprets a `Complex128Array` as a `Float64Array`.\n*\n* @param {Complex128Array} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Float64Array} `Float64Array` view\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var x = new Complex128Array( 10 );\n*\n* var out = reinterpret( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction reinterpret( x, offset ) {\n\treturn new Float64Array( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), 2*(x.length-offset) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default reinterpret;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a binary function to two input strided arrays.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: input array.\n*     -   **strideY**: `y` stride length.\n*     -   **dtypeZ**: `z` data type.\n*     -   **z**: output array.\n*     -   **strideY**: `z` stride length.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type (enumeration constant).\n*     -   **y**: input array.\n*     -   **strideY**: `y` stride length.\n*     -   **dtypeZ**: `z` data type (enumeration constant).\n*     -   **z**: output array.\n*     -   **strideZ**: `z` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: input array.\n*     -   **strideY**: `y` stride length.\n*     -   **dtypeZ**: `z` data type.\n*     -   **z**: output array.\n*     -   **strideZ**: `z` stride length.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 'generic', [ 3, 4 ], 1, 'generic', [ 0, 0 ], 1 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - input array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {*} dtypeY - `y` data type\n\t* @param {Collection} y - input array\n\t* @param {integer} strideY - `y` stride length\n\t* @param {*} dtypeZ - `z` data type\n\t* @param {Collection} z - destination array\n\t* @param {integer} strideZ - `z` stride length\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `z`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ ) {\n\t\tvar viewX;\n\t\tvar viewY;\n\t\tvar viewZ;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif (\n\t\t\t!isTypedArrayLike( x ) ||\n\t\t\t!isTypedArrayLike( y ) ||\n\t\t\t!isTypedArrayLike( z )\n\t\t) {\n\t\t\tfallback( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ );\n\t\t\treturn z;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tdtypeY = resolve( dtypeY );\n\t\tdtypeZ = resolve( dtypeZ );\n\t\tif ( dtypeX === null || dtypeY === null || dtypeZ === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, 0 );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, 0 );\n\t\t} else {\n\t\t\tviewX = x;\n\t\t}\n\t\tif ( dtypeY === COMPLEX64 ) {\n\t\t\tviewY = reinterpretComplex64( y, 0 );\n\t\t} else if ( dtypeY === COMPLEX128 ) {\n\t\t\tviewY = reinterpretComplex128( y, 0 );\n\t\t} else {\n\t\t\tviewY = y;\n\t\t}\n\t\tif ( dtypeZ === COMPLEX64 ) {\n\t\t\tviewZ = reinterpretComplex64( z, 0 );\n\t\t} else if ( dtypeZ === COMPLEX128 ) {\n\t\t\tviewZ = reinterpretComplex128( z, 0 );\n\t\t} else {\n\t\t\tviewZ = z;\n\t\t}\n\t\taddon( N, dtypeX, viewX, strideX, dtypeY, viewY, strideY, dtypeZ, viewZ, strideZ );\n\t\treturn z;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a typed array view having the same data type as a provided input typed array and starting at a specified index offset.\n*\n* @param {(TypedArray|ComplexArray)} x - input array\n* @param {NonNegativeInteger} offset - starting index\n* @returns {(TypedArray|ComplexArray)} typed array view\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = new Float64Array( 10 );\n*\n* var out = offsetView( x, 0 );\n* // returns <Float64Array>\n*\n* var bool = ( out.buffer === x.buffer );\n* // returns true\n*/\nfunction offsetView( x, offset ) {\n\treturn new x.constructor( x.buffer, x.byteOffset+(x.BYTES_PER_ELEMENT*offset), x.length-offset ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default offsetView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the minimum accessible index based on a set of provided strided array parameters.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {NonNegativeInteger} index\n*\n* @example\n* var idx = minViewBufferIndex( 3, -2, 10 );\n* // returns 6\n*/\nfunction minViewBufferIndex( N, stride, offset ) {\n\tif ( N > 0 && stride < 0 ) {\n\t\toffset += (N-1) * stride; // decrements the offset\n\t}\n\treturn offset;\n}\n\n\n// EXPORTS //\n\nexport default minViewBufferIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport offsetView from './../../../base/offset-view';\nimport minViewBufferIndex from './../../../base/min-view-buffer-index';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a binary function to two input strided arrays using alternative indexing semantics.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY, dtypeZ, z, strideZ, offsetZ )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: input array.\n*     -   **strideY**: `y` stride length.\n*     -   **offsetY**: starting `y` index.\n*     -   **dtypeZ**: `z` data type.\n*     -   **z**: output array.\n*     -   **strideZ**: `z` stride length.\n*     -   **offsetZ**: starting `z` index.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type (enumeration constant).\n*     -   **y**: input array.\n*     -   **strideY**: `y` stride length.\n*     -   **dtypeZ**: `z` data type (enumeration constant).\n*     -   **z**: output array.\n*     -   **strideZ**: `z` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY, dtypeZ, z, strideZ, offsetZ )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: input array.\n*     -   **strideY**: `y` stride length.\n*     -   **offsetY**: starting `y` index.\n*     -   **dtypeZ**: `z` data type.\n*     -   **z**: output array.\n*     -   **strideZ**: `z` stride length.\n*     -   **offsetZ**: starting `z` index.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY, dtypeZ, z, strideZ, offsetZ ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 0, 'generic', [ 3, 4 ], 1, 0, 'generic', [ 0, 0 ], 1, 0 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - input array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {NonNegativeInteger} offsetX - starting `x` index\n\t* @param {*} dtypeY - `y` data type\n\t* @param {Collection} y - input array\n\t* @param {integer} strideY - `y` stride length\n\t* @param {NonNegativeInteger} offsetY - starting `y` index\n\t* @param {*} dtypeZ - `z` data type\n\t* @param {Collection} z - destination array\n\t* @param {integer} strideZ - `z` stride length\n\t* @param {NonNegativeInteger} offsetZ - starting `z` index\n\t* @throws {TypeError} fifth argument must be a nonnegative integer\n\t* @throws {TypeError} ninth argument must be a nonnegative integer\n\t* @throws {TypeError} thirteenth argument must be a nonnegative integer\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `z`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY, dtypeZ, z, strideZ, offsetZ ) { // eslint-disable-line max-params\n\t\tvar viewX;\n\t\tvar viewY;\n\t\tvar viewZ;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif (\n\t\t\t!isTypedArrayLike( x ) ||\n\t\t\t!isTypedArrayLike( y ) ||\n\t\t\t!isTypedArrayLike( z )\n\t\t) {\n\t\t\tfallback( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY, dtypeZ, z, strideZ, offsetZ );\n\t\t\treturn z;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tdtypeY = resolve( dtypeY );\n\t\tdtypeZ = resolve( dtypeZ );\n\t\tif ( dtypeX === null || dtypeY === null || dtypeZ === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetX ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First input array offset must be a nonnegative integer. Value: `%s`.', offsetX ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetY ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second input array offset must be a nonnegative integer. Value: `%s`.', offsetY ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetZ ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.', offsetZ ) );\n\t\t}\n\t\toffsetX = minViewBufferIndex( N, strideX, offsetX );\n\t\toffsetY = minViewBufferIndex( N, strideY, offsetY );\n\t\toffsetZ = minViewBufferIndex( N, strideZ, offsetZ );\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, offsetX );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, offsetX );\n\t\t} else {\n\t\t\tviewX = offsetView( x, offsetX );\n\t\t}\n\t\tif ( dtypeY === COMPLEX64 ) {\n\t\t\tviewY = reinterpretComplex64( y, offsetY );\n\t\t} else if ( dtypeY === COMPLEX128 ) {\n\t\t\tviewY = reinterpretComplex128( y, offsetY );\n\t\t} else {\n\t\t\tviewY = offsetView( y, offsetY );\n\t\t}\n\t\tif ( dtypeZ === COMPLEX64 ) {\n\t\t\tviewZ = reinterpretComplex64( z, offsetZ );\n\t\t} else if ( dtypeZ === COMPLEX128 ) {\n\t\t\tviewZ = reinterpretComplex128( z, offsetZ );\n\t\t} else {\n\t\t\tviewZ = offsetView( z, offsetZ );\n\t\t}\n\n\t\taddon( N, dtypeX, viewX, strideX, dtypeY, viewY, strideY, dtypeZ, viewZ, strideZ );\n\t\treturn z;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dispatch to a native add-on applying a binary function to two input strided arrays.\n*\n* @module @stdlib/strided/base/binary-addon-dispatch\n*\n* @example\n* import dispatch from '@stdlib/strided/base/binary-addon-dispatch';\n*\n* function addon( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, dtypeY, y, strideY, dtypeZ, z, strideZ ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 'generic', [ 3, 4 ], 1, 'generic', [ 0, 0 ], 1 );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of strided array data type strings.\n*\n* @returns {StringArray} list of strided array data type strings\n*\n* @example\n* var list = dtypes();\n* // returns [...]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { enum as ndtypes } from '@stdlib/ndarray/dtypes';\n\n\n// VARIABLES //\n\nvar dt = ndtypes();\n\n\n// MAIN //\n\n/**\n* Returns an object mapping supported data strings to enumeration constants for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation of strided arrays.\n*\n* @private\n* @returns {Object} object mapping supported data strings strings to enumeration constants\n*\n* @example\n* var table = enumeration();\n* // returns <Object>\n*/\nfunction enumeration() {\n\t// NOTE: the returned object should match the C `dtypes.h` enumeration!!!!\n\treturn {\n\t\t'bool': dt[ 'bool' ],\n\n\t\t'int8': dt[ 'int8' ],\n\t\t'uint8': dt[ 'uint8' ],\n\t\t'uint8c': dt[ 'uint8c' ],\n\t\t'int16': dt[ 'int16' ],\n\t\t'uint16': dt[ 'uint16' ],\n\t\t'int32': dt[ 'int32' ],\n\t\t'uint32': dt[ 'uint32' ],\n\t\t'int64': dt[ 'int64' ],\n\t\t'uint64': dt[ 'uint64' ],\n\n\t\t'float32': dt[ 'float32' ],\n\t\t'float64': dt[ 'float64' ],\n\n\t\t'complex64': dt[ 'complex64' ],\n\t\t'complex128': dt[ 'complex128' ],\n\n\t\t'binary': dt[ 'binary' ],\n\n\t\t'generic': dt[ 'generic' ],\n\n\t\t'notype': dt[ 'notype' ],\n\n\t\t'userdefined_type': dt[ 'userdefined_type' ]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default enumeration;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of strided array data types.\n*\n* @module @stdlib/strided/dtypes\n*\n* @example\n* import dtypes from '@stdlib/strided/dtypes';\n*\n* var list = dtypes();\n* // returns [...]\n*\n* @example\n* import { enum as enumeration } from '@stdlib/strided/dtypes';\n*\n* var table = enumeration();\n* // returns {...}\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport enumeration from './enum.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\nassign( main, enumeration() );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\nimport objectKeys from '@stdlib/utils/keys';\n\n\n// MAIN //\n\n/**\n* Copies all enumerable own properties from a source object to a target object as enumerable read-only properties.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @returns {Object} modified target object\n*\n* @example\n* var source = {\n*     'beep': 'boop'\n* };\n* var target = {};\n*\n* var out = assign( target, source );\n* // returns <Object>\n*\n* var bool = ( out === target );\n* // returns true\n*\n* var v = target.beep;\n* // returns 'boop'\n*/\nfunction assign( target, source ) {\n\tvar keys;\n\tvar k;\n\tvar i;\n\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tk = keys[ i ];\n\t\tsetReadOnly( target, k, source[ k ] );\n\t}\n\treturn target;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectInverse from '@stdlib/utils/object-inverse';\nimport { enum as enumeration } from '@stdlib/strided/dtypes';\n\n\n// VARIABLES //\n\nvar hash = objectInverse( enumeration(), {\n\t'duplicates': false\n});\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with an ndarray data type enumeration constant.\n*\n* @param {integer} dtype - data type enumeration constant\n* @returns {(string|null)} data type string or null\n*\n* @example\n* import str2enum from '@stdlib/ndarray/base/dtype-str2enum';\n*\n* var v = str2enum( 'float64' );\n* // returns <number>\n*\n* var dt = enum2str( v );\n* // returns 'float64'\n*/\nfunction enum2str( dtype ) {\n\tvar v = hash[ dtype ];\n\treturn ( typeof v === 'string' ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nexport default enum2str;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { enum as enumeration } from './../../../dtypes';\n\n\n// VARIABLES //\n\nvar ENUM = enumeration();\n\n\n// MAIN //\n\n/**\n* Returns the enumeration constant associated with an ndarray data type string.\n*\n* ## Notes\n*\n* -   Downstream consumers of this function should **not** rely on specific integer values (e.g., `INT8 == 0`). Instead, the function should be used in an opaque manner.\n*\n* @param {string} dtype - data type string\n* @returns {(integer|null)} integer value or null\n*\n* @example\n* var v = str2enum( 'int8' );\n* // returns <number>\n*/\nfunction str2enum( dtype ) {\n\tvar v = ENUM[ dtype ];\n\treturn ( typeof v === 'number' ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nexport default str2enum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2str from './../../../base/dtype-enum2str';\nimport str2enum from './../../../base/dtype-str2enum';\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with a supported ndarray data type value.\n*\n* @param {*} dtype - data type value\n* @returns {(string|null)} data type string or null\n*\n* @example\n* import str2enum from '@stdlib/ndarray/base/dtype-str2enum';\n*\n* var v = resolve( str2enum( 'float64' ) );\n* // returns 'float64'\n*/\nfunction resolve( dtype ) {\n\tvar t = ( typeof dtype );\n\tif ( t === 'string' ) {\n\t\treturn ( str2enum( dtype ) === null ) ? null : dtype;\n\t}\n\tif ( t === 'number' ) {\n\t\treturn enum2str( dtype );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default resolve;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport resolve from './../../base/dtype-resolve-str';\nimport PROMOTION_RULES from './promotion_rules.json';\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of promotion rules.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( PROMOTION_RULES );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = PROMOTION_RULES[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns the ndarray data type with the smallest size and closest \"kind\" to which ndarray data types can be safely cast.\n*\n* @param {*} [dtype1] - ndarray data type value\n* @param {*} [dtype2] - ndarray data type value\n* @returns {(Object|integer|string|null)} promotion rule(s) or null\n*\n* @example\n* var table = promotionRules();\n* // returns {...}\n*\n* @example\n* var dt = promotionRules( 'float32', 'uint32' );\n* // returns 'float64'\n*\n* @example\n* var dt = promotionRules( 'binary', 'generic' );\n* // returns -1\n*\n* @example\n* var dt = promotionRules( 'float32', 'foo' );\n* // returns null\n*/\nfunction promotionRules( dtype1, dtype2 ) {\n\tvar o;\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tdtype1 = resolve( dtype1 );\n\tif ( hasOwnProp( PROMOTION_RULES, dtype1 ) ) {\n\t\to = PROMOTION_RULES[ dtype1 ];\n\t\tdtype2 = resolve( dtype2 );\n\t\tif ( hasOwnProp( o, dtype2 ) ) {\n\t\t\treturn o[ dtype2 ];\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default promotionRules;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport resolve from './../../base/dtype-resolve-str';\nimport SAFE_CASTS from './safe_casts.json';\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of safe casts for each ndarray data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of safe casts for each ndarray data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of ndarray data types to which a provided ndarray data type can be safely cast.\n*\n* @param {*} [dtype] - ndarray data type value\n* @returns {(Object|StringArray|null)} list of ndarray data types or null\n*\n* @example\n* var list = safeCasts( 'float32' );\n* // returns [...]\n*/\nfunction safeCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tdtype = resolve( dtype );\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default safeCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport enum2str from './../../../base/dtype-enum2str';\nimport str2enum from './../../../base/dtype-str2enum';\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with a supported strided array data type value.\n*\n* @param {*} dtype - data type value\n* @returns {(string|null)} data type string or null\n*\n* @example\n* import str2enum from '@stdlib/strided/base/dtype-str2enum';\n*\n* var v = resolve( str2enum( 'float64' ) );\n* // returns 'float64'\n*/\nfunction resolve( dtype ) {\n\tvar t = ( typeof dtype );\n\tif ( t === 'string' ) {\n\t\treturn ( str2enum( dtype ) ) ? dtype : null;\n\t}\n\tif ( t === 'number' ) {\n\t\treturn enum2str( dtype );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default resolve;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport promotionRules from '@stdlib/ndarray/promotion-rules';\nimport safeCasts from '@stdlib/ndarray/safe-casts';\nimport resolveEnum from './../../../base/dtype-resolve-enum';\nimport resolveStr from './../../../base/dtype-resolve-str';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns the intersection of two sorted lists.\n*\n* @private\n* @param {ArrayLikeObject} list1 - first sorted list\n* @param {ArrayLikeObject} list2 - second sorted list\n* @returns {ArrayLikeObject} result\n*\n* @example\n* var list1 = [ 'a', 'b', 'c', 'd' ];\n* var list2 = [ 'b', 'd', 'e' ];\n*\n* var out = intersection( list1, list2 );\n* // returns [ 'b', 'd' ]\n*/\nfunction intersection( list1, list2 ) {\n\tvar out;\n\tvar M;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tM = list1.length;\n\tN = list2.length;\n\n\tout = [];\n\tk = 0;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tif ( k >= N ) {\n\t\t\tbreak;\n\t\t}\n\t\tv = list1[ i ];\n\t\tfor ( j = k; j < N; j++ ) {\n\t\t\tif ( v === list2[ j ] ) {\n\t\t\t\tk = j + 1;\n\t\t\t\tout.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/**\n* Resolves a list of data types to data type strings.\n*\n* @private\n* @param {ArrayLikeObject} dtypes - list of data types\n* @returns {(StringArray|Error)} data type strings (or an error)\n*\n* @example\n* var out = resolve( [ 1, 2, 3 ] );\n* // returns [...]\n*/\nfunction resolve( dtypes ) {\n\tvar out;\n\tvar dt;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < dtypes.length; i++ ) {\n\t\tdt = resolveStr( dtypes[ i ] );\n\t\tif ( dt === null ) {\n\t\t\treturn new TypeError( format( 'invalid argument. Must provide recognized data types. Unable to resolve a data type string. Value: `%s`.', dtypes[ i ] ) );\n\t\t}\n\t\tout.push( dt );\n\t}\n\treturn out;\n}\n\n/**\n* Tests whether a provided array contains a specified value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {*} value - search value\n* @returns {boolean} boolean indicating whether a provided array contains a specified value\n*/\nfunction contains( arr, value ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Generates a list of binary interface signatures from strided array data types.\n*\n* ## Notes\n*\n* -   The function returns a strided array having a stride length of `3` (i.e., every `3` elements define a binary interface signature).\n* -   For each signature (i.e., set of three consecutive non-overlapping strided array elements), the first two elements are the input data types and the third element is the return data type.\n* -   All signatures follow type promotion rules.\n*\n* @param {Array} dtypes1 - list of supported data types for the first argument\n* @param {Array} dtypes2 - list of supported data types for the second argument\n* @param {Array} dtypes3 - list of supported data types for the output\n* @param {Options} [options] - options\n* @param {boolean} [options.enums=false] - boolean flag indicating whether to return signatures as a list of enumeration constants\n* @throws {TypeError} must provide recognized data types\n* @returns {Array} strided array containing binary interface signatures\n*\n* @example\n* var dtypes = [\n*     'float64',\n*     'float32',\n*     'int32',\n*     'uint8'\n* ];\n*\n* var sigs = signatures( dtypes, dtypes, dtypes );\n* // returns [ 'float32', 'float32', 'float32', ... ]\n*/\nfunction signatures( dtypes1, dtypes2, dtypes3, options ) {\n\tvar cache;\n\tvar casts;\n\tvar opts;\n\tvar tmp;\n\tvar out;\n\tvar dt1;\n\tvar dt2;\n\tvar dt3;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar t4;\n\tvar M;\n\tvar N;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tif ( arguments.length > 3 ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\t// Resolve the list of provided data types to data type strings:\n\tdt1 = resolve( dtypes1 );\n\tif ( dt1 instanceof Error ) {\n\t\tthrow dt1;\n\t}\n\tif ( dtypes2 === dtypes1 ) { // don't do work if we don't need to\n\t\tdt2 = dt1;\n\t} else {\n\t\tdt2 = resolve( dtypes2 );\n\t\tif ( dt2 instanceof Error ) {\n\t\t\tthrow dt2;\n\t\t}\n\t}\n\tif ( dtypes3 === dtypes1 ) { // don't do work if we don't need to\n\t\tdt3 = dt1;\n\t} else if ( dtypes3 === dtypes2 ) {\n\t\tdt3 = dt2;\n\t} else {\n\t\tdt3 = resolve( dtypes3 );\n\t\tif ( dt3 instanceof Error ) {\n\t\t\tthrow dt3;\n\t\t}\n\t}\n\t// Sort the list of return dtypes:\n\tdt3.sort();\n\n\t// Initialize a cache for storing the safe casts for promoted dtypes:\n\tcache = {};\n\n\t// Generate the list of signatures...\n\tM = dt1.length;\n\tN = dt2.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tt1 = dt1[ i ];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tt2 = dt2[ j ];\n\n\t\t\t// Resolve the promoted dtype for the current dtype pair:\n\t\t\tt3 = promotionRules( t1, t2 );\n\n\t\t\t// Check whether the dtype pair promotes...\n\t\t\tif ( t3 === -1 || t3 === null ) {\n\t\t\t\t// The dtype pair does not promote:\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Check whether the promoted dtype is in our list of output dtypes...\n\t\t\tif ( contains( dt3, t3 ) ) {\n\t\t\t\tout.push( t1, t2, t3 );\n\t\t\t}\n\t\t\t// Retrieve the allowed casts for the promoted dtype:\n\t\t\tcasts = cache[ t3 ];\n\n\t\t\t// If a list of allowed casts is not in the cache, we need to resolve them...\n\t\t\tif ( casts === void 0 ) {\n\t\t\t\t// Resolve the list of safe casts for the promoted dtype:\n\t\t\t\tcasts = safeCasts( t3 );\n\n\t\t\t\t// Remove safe casts which are not among the supported output dtypes:\n\t\t\t\tcasts = intersection( dt3, casts.sort() );\n\n\t\t\t\t// Store the list of safe casts in the cache:\n\t\t\t\tcache[ t3 ] = casts;\n\t\t\t}\n\t\t\t// Generate signatures for allowed casts...\n\t\t\tfor ( k = 0; k < casts.length; k++ ) {\n\t\t\t\tt4 = casts[ k ];\n\t\t\t\tif ( t4 !== t3 ) {\n\t\t\t\t\tout.push( t1, t2, t4 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ( opts.enums ) {\n\t\ttmp = [];\n\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\ttmp.push( resolveEnum( out[ i ] ) );\n\t\t}\n\t\tout = tmp;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default signatures;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar fround = ( typeof Math.fround === 'function' ) ? Math.fround : null; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nexport default fround;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float32Array from '@stdlib/array/float32';\n\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\n\n\n// MAIN //\n\n/**\n* Converts a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @param {number} x - double-precision floating-point number\n* @returns {number} nearest single-precision floating-point number\n*\n* @example\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\nfunction float64ToFloat32( x ) {\n\tFLOAT32_VIEW[ 0 ] = x;\n\treturn FLOAT32_VIEW[ 0 ];\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a double-precision floating-point number to the nearest single-precision floating-point number.\n*\n* @module @stdlib/number/float64/base/to-float32\n*\n* @example\n* import float64ToFloat32 from '@stdlib/number/float64/base/to-float32';\n*\n* var y = float64ToFloat32( 1.337 );\n* // returns 1.3370000123977661\n*/\n\n// MODULES //\n\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar float64ToFloat32;\nif ( typeof builtin === 'function' ) {\n\tfloat64ToFloat32 = builtin;\n} else {\n\tfloat64ToFloat32 = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default float64ToFloat32;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport float64ToFloat32 from '@stdlib/number/float64/base/to-float32';\nimport format from '@stdlib/string/format';\nimport toStr from './tostring.js';\nimport toJSON from './tojson.js';\n\n\n// MAIN //\n\n/**\n* 64-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n* // returns <Complex64>\n*/\nfunction Complex64( real, imag ) {\n\tif ( !( this instanceof Complex64 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( real )\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': float64ToFloat32( imag )\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex64.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 4\n*/\nsetReadOnly( Complex64.prototype, 'BYTES_PER_ELEMENT', 4 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex64.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 8\n*/\nsetReadOnly( Complex64.prototype, 'byteLength', 8 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex64.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex64` instance.\n*\n*\n* @name toJSON\n* @memberof Complex64.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex64', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex64.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport format from '@stdlib/string/format';\nimport toStr from './tostring.js';\nimport toJSON from './tojson.js';\n\n\n// MAIN //\n\n/**\n* 128-bit complex number constructor.\n*\n* @constructor\n* @param {number} real - real component\n* @param {number} imag - imaginary component\n* @throws {TypeError} must invoke using the `new` keyword\n* @throws {TypeError} real component must be a number\n* @throws {TypeError} imaginary component must be a number\n* @returns {Complex128} 128-bit complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n* // returns <Complex128>\n*/\nfunction Complex128( real, imag ) {\n\tif ( !( this instanceof Complex128 ) ) {\n\t\tthrow new TypeError( 'invalid invocation. Constructor must be called with the `new` keyword.' );\n\t}\n\tif ( !isNumber( real ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Real component must be a number. Value: `%s`.', real ) );\n\t}\n\tif ( !isNumber( imag ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Imaginary component must be a number. Value: `%s`.', imag ) );\n\t}\n\tdefineProperty( this, 're', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': real\n\t});\n\tdefineProperty( this, 'im', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': imag\n\t});\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var nbytes = Complex128.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Size (in bytes) of each component.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} size of each component\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex128.prototype, 'BYTES_PER_ELEMENT', 8 );\n\n/**\n* Length (in bytes) of a complex number.\n*\n* @name byteLength\n* @memberof Complex128.prototype\n* @type {integer}\n* @returns {integer} byte length\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var nbytes = z.byteLength;\n* // returns 16\n*/\nsetReadOnly( Complex128.prototype, 'byteLength', 16 );\n\n/**\n* Serializes a complex number as a string.\n*\n* @name toString\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {string} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var str = z.toString();\n* // returns '5 + 3i'\n*/\nsetReadOnly( Complex128.prototype, 'toString', toStr );\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Complex128` instance.\n*\n*\n* @name toJSON\n* @memberof Complex128.prototype\n* @type {Function}\n* @returns {Object} serialized complex number\n*\n* @example\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var obj = z.toJSON();\n* // returns { 'type': 'Complex128', 're': 5.0, 'im': 3.0 }\n*/\nsetReadOnly( Complex128.prototype, 'toJSON', toJSON );\n\n\n// EXPORTS //\n\nexport default Complex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex64';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a string.\n*\n* @private\n* @returns {string} serialized complex number\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar str = '' + this.re;\n\tif ( this.im < 0 ) {\n\t\tstr += ' - ' + (-this.im);\n\t} else {\n\t\tstr += ' + ' + this.im;\n\t}\n\tstr += 'i';\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a complex number as a JSON object.\n*\n* @private\n* @returns {Object} JSON representation\n*/\nfunction toJSON() {\n\t/* eslint-disable no-invalid-this */\n\tvar out = {};\n\tout.type = 'Complex128';\n\tout.re = this.re;\n\tout.im = this.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable valid-typeof */\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar T = 'number';\n\n\n// FUNCTIONS //\n\n/**\n* Wraps a function accepting complex number arguments to support providing both real and complex numbers.\n*\n* ## Notes\n*\n* -   The returned function **assumes** that the wrapped function accepts **only** complex number input arguments (i.e., every argument must be a complex number).\n* -   The returned function **assumes** that, if an input argument is non-numeric (i.e., not of type `number`), then the input argument is a complex number. The returned function does **not** verify that non-numeric input arguments are, in fact, complex number objects. The returned function passes non-numeric input arguments to the wrapped function without modification.\n*\n* @param {Function} fcn - function to wrap\n* @param {NonNegativeInteger} nargs - number of arguments\n* @param {Function} ctor - complex number constructor\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a constructor function\n* @returns {Function} wrapped function\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import caddf from '@stdlib/math/base/ops/caddf';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var f = wrap( caddf, 2, Complex64 );\n*\n* // ...\n*\n* var z = f( 3.0, 4.0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 7.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*/\nfunction wrap( fcn, nargs, ctor ) {\n\tvar fcns;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( nargs ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', nargs ) );\n\t}\n\tif ( !isFunction( ctor ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a constructor function. Value: `%s`.', ctor ) );\n\t}\n\tfcns = [ fcn0, fcn1, fcn2, fcn3, fcn4, fcn5 ];\n\treturn ( nargs <= 5 ) ? fcns[ nargs ] : fcnN;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @returns {*} result\n\t*/\n\tfunction fcn0() {\n\t\treturn fcn();\n\t}\n\n\t/**\n\t* Invokes a unary function accepting complex numbers.\n\t*\n\t* @private\n\t* @param {(number|Complex)} x - input value\n\t* @returns {*} result\n\t*/\n\tfunction fcn1( x ) {\n\t\tif ( typeof x === T ) {\n\t\t\tx = new ctor( x, 0.0 );\n\t\t}\n\t\treturn fcn( x );\n\t}\n\n\t/**\n\t* Invokes a binary function accepting complex numbers.\n\t*\n\t* @private\n\t* @param {(number|Complex)} x - input value\n\t* @param {(number|Complex)} y - input value\n\t* @returns {*} result\n\t*/\n\tfunction fcn2( x, y ) {\n\t\tif ( typeof x === T ) {\n\t\t\tx = new ctor( x, 0.0 );\n\t\t}\n\t\tif ( typeof y === T ) {\n\t\t\ty = new ctor( y, 0.0 );\n\t\t}\n\t\treturn fcn( x, y );\n\t}\n\n\t/**\n\t* Invokes a ternary function accepting complex numbers.\n\t*\n\t* @private\n\t* @param {(number|Complex)} x - input value\n\t* @param {(number|Complex)} y - input value\n\t* @param {(number|Complex)} z - input value\n\t* @returns {*} result\n\t*/\n\tfunction fcn3( x, y, z ) {\n\t\tif ( typeof x === T ) {\n\t\t\tx = new ctor( x, 0.0 );\n\t\t}\n\t\tif ( typeof y === T ) {\n\t\t\ty = new ctor( y, 0.0 );\n\t\t}\n\t\tif ( typeof z === T ) {\n\t\t\tz = new ctor( z, 0.0 );\n\t\t}\n\t\treturn fcn( x, y, z );\n\t}\n\n\t/**\n\t* Invokes a quaternary function accepting complex numbers.\n\t*\n\t* @private\n\t* @param {(number|Complex)} x - input value\n\t* @param {(number|Complex)} y - input value\n\t* @param {(number|Complex)} z - input value\n\t* @param {(number|Complex)} w - input value\n\t* @returns {*} result\n\t*/\n\tfunction fcn4( x, y, z, w ) {\n\t\tif ( typeof x === T ) {\n\t\t\tx = new ctor( x, 0.0 );\n\t\t}\n\t\tif ( typeof y === T ) {\n\t\t\ty = new ctor( y, 0.0 );\n\t\t}\n\t\tif ( typeof z === T ) {\n\t\t\tz = new ctor( z, 0.0 );\n\t\t}\n\t\tif ( typeof w === T ) {\n\t\t\tw = new ctor( w, 0.0 );\n\t\t}\n\t\treturn fcn( x, y, z, w );\n\t}\n\n\t/**\n\t* Invokes a quinary function accepting complex numbers.\n\t*\n\t* @private\n\t* @param {(number|Complex)} x - input value\n\t* @param {(number|Complex)} y - input value\n\t* @param {(number|Complex)} z - input value\n\t* @param {(number|Complex)} w - input value\n\t* @param {(number|Complex)} v - input value\n\t* @returns {*} result\n\t*/\n\tfunction fcn5( x, y, z, w, v ) {\n\t\tif ( typeof x === T ) {\n\t\t\tx = new ctor( x, 0.0 );\n\t\t}\n\t\tif ( typeof y === T ) {\n\t\t\ty = new ctor( y, 0.0 );\n\t\t}\n\t\tif ( typeof z === T ) {\n\t\t\tz = new ctor( z, 0.0 );\n\t\t}\n\t\tif ( typeof w === T ) {\n\t\t\tw = new ctor( w, 0.0 );\n\t\t}\n\t\tif ( typeof v === T ) {\n\t\t\tv = new ctor( v, 0.0 );\n\t\t}\n\t\treturn fcn( x, y, z, w, v );\n\t}\n\n\t/**\n\t* Invokes a function accepting an arbitrary number of complex number input arguments.\n\t*\n\t* @private\n\t* @param {...(number|Complex)} args - input values\n\t* @returns {*} result\n\t*/\n\tfunction fcnN() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( typeof v === T ) {\n\t\t\t\tv = new ctor( v, 0.0 );\n\t\t\t}\n\t\t\targs.push( v );\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolve from './../../../base/dtype-resolve-str';\nimport Complex64 from '@stdlib/complex/float32';\nimport Complex128 from '@stdlib/complex/float64';\nimport wrap from '@stdlib/complex/base/wrap-function';\n\n\n// VARIABLES //\n\nvar C64 = 'complex64';\nvar C128 = 'complex128';\nvar CTORS = {\n\t'complex64': Complex64,\n\t'complex128': Complex128\n};\n\n\n// FUNCTIONS //\n\n/**\n* Resolves a callback based on provided dtypes.\n*\n* @private\n* @param {Object} table - callback table\n* @param {Function} table.default - default callback\n* @param {Function} table.complex64 - callback for single-precision complex floating-point numbers\n* @param {Function} table.complex128 - callback for double-precision complex floating-point numbers\n* @param {string} t1 - dtype for first argument\n* @param {string} t2 - dtype for second argument\n* @param {string} t3 - dtype for return value\n* @returns {Function} callback\n*/\nfunction resolveCallback( table, t1, t2, t3 ) {\n\t// The following branches attempt to follow type promotion rules; however, some accommodations are made for completeness...\n\n\t// Signature: ??_z\n\tif ( t3 === C128 ) {\n\t\t// c?_z\n\t\tif ( t1 === C64 ) {\n\t\t\t// cz_z or cc_z\n\t\t\tif ( t2 === C128 || t2 === C64 ) {\n\t\t\t\treturn table[ C128 ]; // Signature: cz_z_as_zz_z or cc_z_as_zz_z\n\t\t\t}\n\t\t\t// cd_z\n\t\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: cd_z_as_zz_z\n\t\t}\n\t\t// z?_z\n\t\tif ( t1 === C128 ) {\n\t\t\t// zz_z or zc_z\n\t\t\tif ( t2 === C128 || t2 === C64 ) {\n\t\t\t\treturn table[ C128 ]; // Signature: zz_z or zc_z_as_zz_z\n\t\t\t}\n\t\t\t// zd_z\n\t\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: zd_z_as_zz_z\n\t\t}\n\t\t// dc_z, dz_z, or dd_z\n\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: dc_z_as_zz_z, dz_z_as_zz_z, or dd_z_as_zz_z\n\t}\n\t// Signature: ??_c\n\tif ( t3 === C64 ) {\n\t\t// z?_c\n\t\tif ( t1 === C128 ) {\n\t\t\t// zc_c or zz_c (note: according to type promotion rules `zz_c` should not happen, as `z` does not promote to `c`, but we accommodate here anyway)\n\t\t\tif ( t2 === C64 || t2 === C128 ) {\n\t\t\t\treturn table[ C128 ]; // Signature: zc_c_as_zz_z or zz_c_as_zz_z\n\t\t\t}\n\t\t\t// zd_c (note: according to type promotion rules `zd_c` should not happen, as neither `z` nor `d` promote to `c`, but we accommodate here anyway)\n\t\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: zd_c_as_zz_z\n\t\t}\n\t\t// c?_c\n\t\tif ( t1 === C64 ) {\n\t\t\t// cz_c (note: according to type promotion rules `cz_c` should not happen, as `z` does not promote to `c`, but we accommodate here anyway)\n\t\t\tif ( t2 === C128 ) {\n\t\t\t\treturn table[ C128 ]; // Signature: cz_c_as_zz_z\n\t\t\t}\n\t\t\t// cc_c\n\t\t\tif ( t2 === C64 ) {\n\t\t\t\treturn table[ C64 ]; // Signature: cc_c\n\t\t\t}\n\t\t\t// cd_c (note: in JavaScript, real values are double-precision, but we downcast `d` to `c`, as, according to type promotion rules `cd_c` should not happen, as `d` does not promote to `c`, but `cf_c` can happen)\n\t\t\treturn wrap( table[ C64 ], 2, CTORS[ C64 ] ); // Signature: cd_c_as_cc_c (cf_c_as_cc_c)\n\t\t}\n\t\t// dz_c\n\t\tif ( t2 === C128 ) {\n\t\t\t// Note: according to type promotion rules `dz_c` should not happen, as neither `z` nor `d` promote to `c`, but we accommodate here anyway\n\t\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: zd_c_as_zz_z\n\t\t}\n\t\t// dc_c\n\t\tif ( t2 === C64 ) {\n\t\t\t// Note: in JavaScript, real values are double-precision, but we downcast `d` to `c`, as, according to type promotion rules `dc_c` should not happen, as `d` does not promote to `c`, but `fc_c` can happen\n\t\t\treturn wrap( table[ C64 ], 2, CTORS[ C64 ] ); // Signature: dc_c_as_cc_c (fc_c_as_cc_c)\n\t\t}\n\t\t// dd_c (note: in JavaScript, real values are double-precision, but we downcast `d` to `c`, as, according to type promotion rules `dd_c` should not happen, as `d` does not promote to `c`, but `ff_c` can happen)\n\t\treturn wrap( table[ C64 ], 2, CTORS[ C64 ] ); // Signature: dd_c_as_cc_c (ff_c_as_cc_c)\n\t}\n\t// Signature: ??_o\n\tif ( t3 === 'generic' ) {\n\t\t// z?_o\n\t\tif ( t1 === C128 ) {\n\t\t\t// zz_o or zc_o\n\t\t\tif ( t2 === C128 || t2 === C64 ) {\n\t\t\t\treturn table[ C128 ]; // Signature: zz_o_as_zz_z or zc_o_as_zz_z\n\t\t\t}\n\t\t\t// zd_o\n\t\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: zd_o_as_zz_z\n\t\t}\n\t\t// c?_o\n\t\tif ( t1 === C64 ) {\n\t\t\t// cc_o\n\t\t\tif ( t2 === C64 ) {\n\t\t\t\treturn table[ C64 ]; // Signature: cc_o_as_cc_c\n\t\t\t}\n\t\t\t// cz_o\n\t\t\tif ( t2 === C128 ) {\n\t\t\t\treturn table[ C128 ]; // Signature: cz_o_as_zz_z\n\t\t\t}\n\t\t\t// cd_o\n\t\t\treturn wrap( table[ C64 ], 2, CTORS[ C64 ] ); // Signature: cd_o_as_cc_c\n\t\t}\n\t\t// dz_o\n\t\tif ( t2 === C128 ) {\n\t\t\treturn wrap( table[ C128 ], 2, CTORS[ C128 ] ); // Signature: dz_o_as_zz_z\n\t\t}\n\t\t// dc_o\n\t\tif ( t2 === C64 ) {\n\t\t\treturn wrap( table[ C64 ], 2, CTORS[ C64 ] ); // Signature: dc_o_as_cc_c\n\t\t}\n\t\t// dd_o\n\t\treturn table.default;\n\t}\n\treturn table.default;\n}\n\n\n// MAIN //\n\n/**\n* Assigns callbacks to binary interfaces according to type promotion rules.\n*\n* ## Notes\n*\n* -   The function assumes that the provided signature array has the following properties:\n*\n*     -   a strided array having a stride length of `3` (i.e., every `3` elements define a binary interface signature).\n*     -   for each signature (i.e., set of three consecutive non-overlapping strided array elements), the first two elements are the input data types and the third element is the return data type.\n*     -   all signatures follow type promotion rules.\n*\n* -   Based on type promotion rules, we can simply use the callback for `float64` (i.e., the assumed \"default\") for all interfaces not involving complex numbers, even for `float32`, as we shouldn't need to explicitly downcast strided array values. The only time we need to return `float32` values is when input arrays are already `float32` or of a type which can be safely represented in `float32` without concern for truncation.\n*\n* @param {Object} table - callback table\n* @param {Function} table.default - default callback\n* @param {Function} table.complex64 - callback for single-precision complex floating-point numbers\n* @param {Function} table.complex128 - callback for double-precision complex floating-point numbers\n* @param {ArrayLikeObject} signatures - strided array containing binary interface signatures\n* @returns {Array<Function>} list of callbacks\n*\n* @example\n* import signatures from '@stdlib/strided/base/binary-dtype-signatures';\n* import add from '@stdlib/math/base/ops/add';\n* import cadd from '@stdlib/math/base/ops/cadd';\n* import caddf from '@stdlib/math/base/ops/caddf';\n*\n* var dtypes = [\n*     'float64',\n*     'float32',\n*     'int32',\n*     'uint8'\n* ];\n*\n* var sigs = signatures( dtypes, dtypes, dtypes );\n* // returns [...]\n*\n* var table = {\n*     'default': add,\n*     'complex64': caddf,\n*     'complex128': cadd\n* };\n*\n* var list = callbacks( table, sigs );\n* // returns [...]\n*/\nfunction callbacks( table, signatures ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < signatures.length; i += 3 ) {\n\t\tt1 = resolve( signatures[ i ] );\n\t\tt2 = resolve( signatures[ i+1 ] );\n\t\tt3 = resolve( signatures[ i+2 ] );\n\t\tout.push( resolveCallback( table, t1, t2, t3 ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default callbacks;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a single-precision complex floating-point strided input array and assigns results to a single-precision complex floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Complex64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Complex64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply\n* @returns {Complex64Array} `y`\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex64 from '@stdlib/complex/float32';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex64( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex64Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex64Array( x.length );\n*\n* cmap( x.length, x, 1, y, 1, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*/\nfunction cmap( N, x, strideX, y, strideY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty.set( fcn( x.get( ix ) ), iy );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default cmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a double-precision floating-point strided input array and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply\n* @returns {Float64Array} `y`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmap( x.length, x, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction dmap( N, x, strideX, y, strideY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = fcn( x[ ix ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default dmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to double-precision floating-point strided input arrays and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {Float64Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {Function} fcn - binary function to apply\n* @returns {Float64Array} `z`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmap2( x.length, x, 1, y, 1, z, 1, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction dmap2( N, x, strideX, y, strideY, z, strideZ, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( strideZ < 0 ) {\n\t\tiz = (1-N) * strideZ;\n\t} else {\n\t\tiz = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default dmap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a double-precision floating-point strided input array according to a strided mask array and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {Float64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply\n* @returns {Float64Array} `y`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmskmap( x.length, x, 1, m, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction dmskmap( N, x, strideX, mask, strideMask, y, strideY, fcn ) {\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideMask < 0 ) {\n\t\tim = (1-N) * strideMask;\n\t} else {\n\t\tim = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\ty[ iy ] = fcn( x[ ix ] );\n\t\t}\n\t\tix += strideX;\n\t\tim += strideMask;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default dmskmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to double-precision floating-point strided input arrays and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {Float64Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {Function} fcn - binary function to apply\n* @returns {Float64Array} `z`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmskmap2( x.length, x, 1, y, 1, m, 1, z, 1, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*/\nfunction dmskmap2( N, x, strideX, y, strideY, mask, strideMask, z, strideZ, fcn ) { // eslint-disable-line max-len\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar im;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( strideZ < 0 ) {\n\t\tiz = (1-N) * strideZ;\n\t} else {\n\t\tiz = 0;\n\t}\n\tif ( strideMask < 0 ) {\n\t\tim = (1-N) * strideMask;\n\t} else {\n\t\tim = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t\tim += strideMask;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default dmskmap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to each element retrieved from a strided input array according to a callback function and assigns results to a strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} x - input array/collection\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - destination array/collection\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply to callback return values\n* @param {Callback} clbk - callback\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} `y`\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy( x.length, x, 1, y, 1, abs, accessor );\n*\n* console.log( y );\n* // => [ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction mapBy( N, x, strideX, y, strideY, fcn, clbk, thisArg ) {\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = clbk.call( thisArg, x[ ix ], i, ix, iy, x, y );\n\t\tif ( v !== void 0 ) {\n\t\t\ty[ iy ] = fcn( v );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default mapBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to each element retrieved from a strided input array according to a callback function and assigns results to a strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} x - input array/collection\n* @param {integer} strideX - `x` stride length\n* @param {Collection} y - input array/collection\n* @param {integer} strideY - `y` stride length\n* @param {Collection} z - destination array/collection\n* @param {integer} strideZ - `z` stride length\n* @param {Function} fcn - binary function to apply to callback return values\n* @param {Callback} clbk - callback function which returns an array-like object containing two values\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} `z`\n*\n* @example\n* import add from '@stdlib/math/base/ops/add';\n*\n* function accessor( vx, vy ) {\n*     return [ vx*2.0, vy*2.0 ];\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var z = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy2( x.length, x, 1, y, 1, z, 1, add, accessor );\n*\n* console.log( z );\n* // => [ 4.0, 0.0, 12.0, 0.0, 20.0 ]\n*/\nfunction mapBy2( N, x, strideX, y, strideY, z, strideZ, fcn, clbk, thisArg ) {\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar v;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( strideZ < 0 ) {\n\t\tiz = (1-N) * strideZ;\n\t} else {\n\t\tiz = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = clbk.call( thisArg, x[ ix ], y[ iy ], i, ix, iy, iz, x, y, z );\n\t\tif ( v !== void 0 ) {\n\t\t\tz[ iz ] = fcn( v[ 0 ], v[ 1 ] );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default mapBy2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to a single-precision floating-point strided input array and assign results to a single-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/cmap\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex64 from '@stdlib/complex/float32';\n* import cmap from '@stdlib/strided/base/cmap';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex64( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex64Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex64Array( x.length );\n*\n* cmap( x.length, x, 1, y, 1, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex64 from '@stdlib/complex/float32';\n* import cmap from '@stdlib/strided/base/cmap';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex64( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex64Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex64Array( x.length );\n*\n* cmap.ndarray( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a single-precision complex floating-point strided input array and assigns results to a single-precision complex floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Complex64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Complex64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply\n* @returns {Complex64Array} `y`\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex64 from '@stdlib/complex/float32';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex64( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex64Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex64Array( x.length );\n*\n* cmap( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex64>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*/\nfunction cmap( N, x, strideX, offsetX, y, strideY, offsetY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty.set( fcn( x.get( ix ) ), iy );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default cmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to a double-precision floating-point strided input array and assign results to a double-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/dmap\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import dmap from '@stdlib/strided/base/dmap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmap( x.length, x, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import dmap from '@stdlib/strided/base/dmap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmap.ndarray( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a double-precision floating-point strided input array and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply\n* @returns {Float64Array} `y`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmap( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction dmap( N, x, strideX, offsetX, y, strideY, offsetY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = fcn( x[ ix ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default dmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a binary function to double-precision floating-point strided input arrays and assign results to a double-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/dmap2\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n* import dmap2 from '@stdlib/strided/base/dmap2';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmap2( x.length, x, 1, y, 1, z, 1, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n* import dmap2 from '@stdlib/strided/base/dmap2';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmap2.ndarray( x.length, x, 1, 0, y, 1, 0, z, 1, 0, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to double-precision floating-point strided input arrays and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float64Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Float64Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {NonNegativeInteger} offsetZ - starting `z` index\n* @param {Function} fcn - binary function to apply\n* @returns {Float64Array} `z`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmap2( x.length, x, 1, 0, y, 1, 0, z, 1, 0, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction dmap2( N, x, strideX, offsetX, y, strideY, offsetY, z, strideZ, offsetZ, fcn ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tiz = offsetZ;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default dmap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to a double-precision floating-point strided input array according to a strided mask array and assign results to a double-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/dmskmap\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import dmskmap from '@stdlib/strided/base/dmskmap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmskmap( x.length, x, 1, m, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import dmskmap from '@stdlib/strided/base/dmskmap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmskmap.ndarray( x.length, x, 1, 0, m, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a double-precision floating-point strided input array according to a strided mask array and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {NonNegativeInteger} offsetMask - starting `mask` index\n* @param {Float64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply\n* @returns {Float64Array} `y`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* dmskmap( x.length, x, 1, 0, m, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction dmskmap( N, x, strideX, offsetX, mask, strideMask, offsetMask, y, strideY, offsetY, fcn ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tim = offsetMask;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\ty[ iy ] = fcn( x[ ix ] );\n\t\t}\n\t\tix += strideX;\n\t\tim += strideMask;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default dmskmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a binary function to double-precision floating-point strided input arrays according to a strided mask array and assign results to a double-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/dmskmap2\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import add from '@stdlib/math/base/ops/add';\n* import dmskmap2 from '@stdlib/strided/base/dmskmap2';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmskmap2( x.length, x, 1, y, 1, m, 1, z, 1, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import add from '@stdlib/math/base/ops/add';\n* import dmskmap2 from '@stdlib/strided/base/dmskmap2';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmskmap2.ndarray( x.length, x, 1, 0, y, 1, 0, m, 1, 0, z, 1, 0, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to double-precision floating-point strided input arrays according to a strided mask array and assigns results to a double-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float64Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {NonNegativeInteger} offsetMask - starting `mask` index\n* @param {Float64Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {NonNegativeInteger} offsetZ - starting `z` index\n* @param {Function} fcn - binary function to apply\n* @returns {Float64Array} `z`\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float64Array( x.length );\n*\n* dmskmap2( x.length, x, 1, 0, y, 1, 0, m, 1, 0, z, 1, 0, add );\n*\n* console.log( z );\n* // => <Float64Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*/\nfunction dmskmap2( N, x, strideX, offsetX, y, strideY, offsetY, mask, strideMask, offsetMask, z, strideZ, offsetZ, fcn ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar im;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tiz = offsetZ;\n\tim = offsetMask;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t\tim += strideMask;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default dmskmap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to each element retrieved from a strided input array according to a callback function and assign results to a strided output array.\n*\n* @module @stdlib/strided/base/map-by\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import mapBy from '@stdlib/strided/base/map-by';\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy( x.length, x, 1, y, 1, abs, accessor );\n*\n* console.log( y );\n* // => [ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n* import mapBy from '@stdlib/strided/base/map-by';\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy.ndarray( x.length, x, 1, 0, y, 1, 0, abs, accessor );\n*\n* console.log( y );\n* // => [ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to each element retrieved from a strided input array according to a callback function and assigns results to a strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} x - input array/collection\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - destination array/collection\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply to callback return values\n* @param {Callback} clbk - callback\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} `y`\n*\n* @example\n* import abs from '@stdlib/math/base/special/abs';\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy( x.length, x, 1, 0, y, 1, 0, abs, accessor );\n*\n* console.log( y );\n* // => [ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction mapBy( N, x, strideX, offsetX, y, strideY, offsetY, fcn, clbk, thisArg ) { // eslint-disable-line max-len\n\tvar ix;\n\tvar iy;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = clbk.call( thisArg, x[ ix ], i, ix, iy, x, y );\n\t\tif ( v !== void 0 ) {\n\t\t\ty[ iy ] = fcn( v );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default mapBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a binary function to each pair of elements retrieved from strided input arrays according to a callback function and assign results to a strided output array.\n*\n* @module @stdlib/strided/base/map-by2\n*\n* @example\n* import add from '@stdlib/math/base/ops/add';\n* import mapBy2 from '@stdlib/strided/base/map-by2';\n*\n* function accessor( vx, vy ) {\n*     return [ vx*2.0, vy*2.0 ];\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var z = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy2( x.length, x, 1, y, 1, z, 1, add, accessor );\n*\n* console.log( z );\n* // => [ 4.0, 0.0, 12.0, 0.0, 20.0 ]\n*\n* @example\n* import add from '@stdlib/math/base/ops/add';\n* import mapBy2 from '@stdlib/strided/base/map-by2';\n*\n* function accessor( vx, vy ) {\n*     return [ vx*2.0, vy*2.0 ];\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var z = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy2.ndarray( x.length, x, 1, 0, y, 1, 0, z, 1, 0, add, accessor );\n*\n* console.log( z );\n* // => [ 4.0, 0.0, 12.0, 0.0, 20.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to each element retrieved from a strided input array according to a callback function and assigns results to a strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} x - input array/collection\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Collection} y - input array/collection\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Collection} z - destination array/collection\n* @param {integer} strideZ - `z` stride length\n* @param {NonNegativeInteger} offsetZ - starting `z` index\n* @param {Function} fcn - binary function to apply to callback return values\n* @param {Callback} clbk - callback function which returns an array-like object containing two values\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} `z`\n*\n* @example\n* import add from '@stdlib/math/base/ops/add';\n*\n* function accessor( vx, vy ) {\n*     return [ vx*2.0, vy*2.0 ];\n* }\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n* var y = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n* var z = [ 0.0, 0.0, 0.0, 0.0, 0.0 ];\n*\n* mapBy2( x.length, x, 1, 0, y, 1, 0, z, 1, 0, add, accessor );\n*\n* console.log( z );\n* // => [ 4.0, 0.0, 12.0, 0.0, 20.0 ]\n*/\nfunction mapBy2( N, x, strideX, offsetX, y, strideY, offsetY, z, strideZ, offsetZ, fcn, clbk, thisArg ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tiz = offsetZ;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = clbk.call( thisArg, x[ ix ], y[ iy ], i, ix, iy, iz, x, y, z );\n\t\tif ( v !== void 0 ) {\n\t\t\tz[ iz ] = fcn( v[ 0 ], v[ 1 ] );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default mapBy2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport resolve from './../../../base/dtype-resolve-str';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Transforms a list of array argument data types into a list of signatures.\n*\n* @param {ArrayLikeObject} dtypes - list of array argument data types\n* @param {NonNegativeInteger} nin - number of input array arguments\n* @param {NonNegativeInteger} nout - number of output array arguments\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {RangeError} first argument must contain at least one element\n* @throws {RangeError} length of the first argument is incompatible with the second and third arguments\n* @returns {StringArray} list of signatures\n*\n* @example\n* var dtypes = [\n*     'float64', 'float64',\n*     'float32', 'float32'\n* ];\n*\n* var sigs = dtypes2signatures( dtypes, 1, 1 );\n* // returns [ '(float64) => (float64)', '(float32) => (float32)' ]\n*/\nfunction dtypes2signatures( dtypes, nin, nout ) {\n\tvar len;\n\tvar out;\n\tvar tmp;\n\tvar dt;\n\tvar N;\n\tvar M;\n\tvar i;\n\tvar m;\n\n\tif ( !isArrayLikeObject( dtypes ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', dtypes ) );\n\t}\n\tif ( !isNonNegativeInteger( nin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', nin ) );\n\t}\n\tif ( !isNonNegativeInteger( nout ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', nout ) );\n\t}\n\tlen = dtypes.length;\n\tif ( len === 0 ) {\n\t\tthrow new RangeError( 'invalid argument. First argument must contain at least one element.' );\n\t}\n\tN = nin + nout;\n\tif ( len%N !== 0 ) {\n\t\tthrow new RangeError( 'invalid arguments. Length of the first argument is incompatible with the second and third arguments.' );\n\t}\n\tout = [];\n\n\t// Create a temporary array for storing signatures...\n\ttmp = [];\n\n\t// [ '(', <in_dtype>, ', ', ..., ') => (', <out_dtype>, ', ', ..., ')' ] => 1+nin+nin-1+1+nout+nout-1+1 => 1 + (2*nin) + (2*nout) => 1 + (2*(nin+nout))\n\tM = 2 * N;\n\tm = 2 * nin;\n\tfor ( i = 0; i <= M; i++ ) {\n\t\tif ( i === 0 ) {\n\t\t\tif ( i === m ) {\n\t\t\t\ttmp.push( '() => (' );\n\t\t\t} else {\n\t\t\t\ttmp.push( '(' );\n\t\t\t}\n\t\t} else if ( i === M ) {\n\t\t\tif ( i === m ) {\n\t\t\t\ttmp.push( ') => ()' );\n\t\t\t} else {\n\t\t\t\ttmp.push( ')' );\n\t\t\t}\n\t\t} else if ( i === m ) {\n\t\t\ttmp.push( ') => (' );\n\t\t} else if ( i%2 === 1 ) {\n\t\t\ttmp.push( '' );\n\t\t} else {\n\t\t\ttmp.push( ', ' );\n\t\t}\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tdt = resolve( dtypes[ i ] );\n\t\tif ( dt === null ) {\n\t\t\tdt = dtypes[ i ];\n\t\t}\n\t\tm = i % N;\n\t\ttmp[ (2*m)+1 ] = dt;\n\t\tif ( m === N-1 ) {\n\t\t\tout.push( tmp.join( '' ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default dtypes2signatures;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* import MAX_ARRAY_LENGTH from '@stdlib/constants/array/max-array-length';\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nexport default MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './unary.js';\nimport accessors from './accessors.js';\nimport getIndexed from './getter.js';\nimport getAccessor from './getter.accessor.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array according to elements in a strided mask array and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array, a mask array, and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the strided arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* mskunary( [ x, m, y ], shape, strides, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction mskunary( arrays, shape, strides, fcn ) {\n\tvar xget;\n\tvar mget;\n\tvar yset;\n\tvar x;\n\tvar m;\n\tvar y;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txget = getAccessor;\n\t}\n\tm = arrays[ 1 ];\n\tif ( m.get && m.set ) {\n\t\tmget = getAccessor;\n\t}\n\ty = arrays[ 2 ];\n\tif ( y.get && y.set ) {\n\t\tyset = setAccessor;\n\t}\n\tif ( xget || mget || yset ) {\n\t\txget = xget || getIndexed;\n\t\tmget = mget || getIndexed;\n\t\tyset = yset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, [ xget, mget, yset ], fcn );\n\t}\n\treturn strided( arrays, shape, strides, fcn );\n}\n\n\n// EXPORTS //\n\nexport default mskunary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array according to elements in a strided mask array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array, a mask array, and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the strided arrays\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the strided arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* function xget( buf, idx ) {\n*     return buf[ idx ] * 2.0;\n* }\n*\n* function mget( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* mskunary( [ x, m, y ], shape, strides, [ xget, mget, set ], scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 20.0, 40.0, 0.0, 80.0, 100.0 ]\n*/\nfunction mskunary( arrays, shape, strides, accessors, fcn ) {\n\tvar xget;\n\tvar mget;\n\tvar yset;\n\tvar sx;\n\tvar sm;\n\tvar sy;\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar x;\n\tvar m;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsm = strides[ 1 ];\n\tsy = strides[ 2 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sm < 0 ) {\n\t\tim = (1-N) * sm;\n\t} else {\n\t\tim = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tx = arrays[ 0 ];\n\tm = arrays[ 1 ];\n\ty = arrays[ 2 ];\n\txget = accessors[ 0 ];\n\tmget = accessors[ 1 ];\n\tyset = accessors[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mget( m, im ) === 0 ) {\n\t\t\tyset( y, iy, fcn( xget( x, ix ) ) );\n\t\t}\n\t\tix += sx;\n\t\tim += sm;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskunary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array according to elements in a strided mask array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array, a mask array, and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the strided arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* mskunary( [ x, m, y ], shape, strides, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction mskunary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar sm;\n\tvar sy;\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar x;\n\tvar m;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsm = strides[ 1 ];\n\tsy = strides[ 2 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sm < 0 ) {\n\t\tim = (1-N) * sm;\n\t} else {\n\t\tim = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tx = arrays[ 0 ];\n\tm = arrays[ 1 ];\n\ty = arrays[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( m[ im ] === 0 ) {\n\t\t\ty[ iy ] = fcn( x[ ix ] );\n\t\t}\n\t\tix += sx;\n\t\tim += sm;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskunary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary callback to elements in a strided input array according to elements in a strided mask array and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/mskunary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import mskunary from '@stdlib/strided/base/mskunary';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n*\n* mskunary( [ x, m, y ], shape, strides, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n* import mskunary from '@stdlib/strided/base/mskunary';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* mskunary.ndarray( [ x, m, y ], shape, strides, offsets, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './unary.ndarray.js';\nimport accessors from './accessors.ndarray.js';\nimport getIndexed from './getter.js';\nimport getAccessor from './getter.accessor.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array according to elements in a strided mask array and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array, a mask array, and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the strided arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the strided arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* mskunary( [ x, m, y ], shape, strides, offsets, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction mskunary( arrays, shape, strides, offsets, fcn ) {\n\tvar xget;\n\tvar mget;\n\tvar yset;\n\tvar x;\n\tvar m;\n\tvar y;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txget = getAccessor;\n\t}\n\tm = arrays[ 1 ];\n\tif ( m.get && m.set ) {\n\t\tmget = getAccessor;\n\t}\n\ty = arrays[ 2 ];\n\tif ( y.get && y.set ) {\n\t\tyset = setAccessor;\n\t}\n\tif ( xget || mget || yset ) {\n\t\txget = xget || getIndexed;\n\t\tmget = mget || getIndexed;\n\t\tyset = yset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, offsets, [ xget, mget, yset ], fcn ); // eslint-disable-line max-len\n\t}\n\treturn strided( arrays, shape, strides, offsets, fcn );\n}\n\n\n// EXPORTS //\n\nexport default mskunary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array according to elements in a strided mask array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array, a mask array, and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the strided arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the strided arrays\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the strided arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* function xget( buf, idx ) {\n*     return buf[ idx ] * 2.0;\n* }\n*\n* function mget( buf, idx ) {\n*     return buf[ idx ];\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* mskunary( [ x, m, y ], shape, strides, offsets, [ xget, mget, set ], scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 20.0, 40.0, 0.0, 80.0, 100.0 ]\n*/\nfunction mskunary( arrays, shape, strides, offsets, accessors, fcn ) {\n\tvar xget;\n\tvar mget;\n\tvar yset;\n\tvar sx;\n\tvar sm;\n\tvar sy;\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar x;\n\tvar m;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tim = offsets[ 1 ];\n\tiy = offsets[ 2 ];\n\tsx = strides[ 0 ];\n\tsm = strides[ 1 ];\n\tsy = strides[ 2 ];\n\tx = arrays[ 0 ];\n\tm = arrays[ 1 ];\n\ty = arrays[ 2 ];\n\txget = accessors[ 0 ];\n\tmget = accessors[ 1 ];\n\tyset = accessors[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mget( m, im ) === 0 ) {\n\t\t\tyset( y, iy, fcn( xget( x, ix ) ) );\n\t\t}\n\t\tix += sx;\n\t\tim += sm;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskunary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array according to elements in a strided mask array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array, a mask array, and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the strided arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the strided arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1 ];\n* var offsets = [ 0, 0, 0 ];\n*\n* mskunary( [ x, m, y ], shape, strides, offsets, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction mskunary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar sm;\n\tvar sy;\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar x;\n\tvar m;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tim = offsets[ 1 ];\n\tiy = offsets[ 2 ];\n\tsx = strides[ 0 ];\n\tsm = strides[ 1 ];\n\tsy = strides[ 2 ];\n\tx = arrays[ 0 ];\n\tm = arrays[ 1 ];\n\ty = arrays[ 2 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( m[ im ] === 0 ) {\n\t\t\ty[ iy ] = fcn( x[ ix ] );\n\t\t}\n\t\tix += sx;\n\t\tim += sm;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskunary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a unary function to an input strided array according to a mask strided array.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeMask**: `mask` data type.\n*     -   **mask**: mask array.\n*     -   **strideMask**: `mask` stride length.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeMask**: `mask` data type (enumeration constant).\n*     -   **mask**: mask array.\n*     -   **strideMask**: `mask` stride length.\n*     -   **dtypeY**: `y` data type (enumeration constant).\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeMask**: `mask` data type.\n*     -   **mask**: mask array.\n*     -   **strideMask**: `mask` stride length.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 'generic', [ 0, 0 ], 1, 'generic', [ 0, 0 ], 1 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - input array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {*} dtypeMask - `mask` data type\n\t* @param {Collection} mask - mask array\n\t* @param {integer} strideMask - `mask` stride length\n\t* @param {*} dtypeY - `y` data type\n\t* @param {Collection} y - destination array\n\t* @param {integer} strideY - `y` stride length\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `y`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY ) {\n\t\tvar viewX;\n\t\tvar viewY;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif ( !isTypedArrayLike( x ) || !isTypedArrayLike( y ) || !isTypedArrayLike( mask ) ) {\n\t\t\tfallback( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY );\n\t\t\treturn y;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tdtypeY = resolve( dtypeY );\n\t\tdtypeMask = resolve( dtypeMask );\n\t\tif ( dtypeX === null || dtypeY === null || dtypeMask === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, 0 );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, 0 );\n\t\t} else {\n\t\t\tviewX = x;\n\t\t}\n\t\tif ( dtypeY === COMPLEX64 ) {\n\t\t\tviewY = reinterpretComplex64( y, 0 );\n\t\t} else if ( dtypeY === COMPLEX128 ) {\n\t\t\tviewY = reinterpretComplex128( y, 0 );\n\t\t} else {\n\t\t\tviewY = y;\n\t\t}\n\t\taddon( N, dtypeX, viewX, strideX, dtypeMask, mask, strideMask, dtypeY, viewY, strideY );\n\t\treturn y;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport offsetView from './../../../base/offset-view';\nimport minViewBufferIndex from './../../../base/min-view-buffer-index';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a unary function to an input strided array according to a mask strided array using alternative indexing semantics.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX, dtypeMask, mask, strideMask, offsetMask, dtypeY, y, strideY, offsetY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*     -   **dtypeMask**: `mask` data type.\n*     -   **mask**: mask array.\n*     -   **strideMask**: `mask` stride length.\n*     -   **offsetMask**: starting `mask` index.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*     -   **offsetY**: starting `y` index.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeMask**: `mask` data type (enumeration constant).\n*     -   **mask**: mask array.\n*     -   **strideMask**: `mask` stride length.\n*     -   **dtypeY**: `y` data type (enumeration constant).\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX, dtypeMask, mask, strideMask, offsetMask, dtypeY, y, strideY, offsetY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*     -   **dtypeMask**: `mask` data type.\n*     -   **mask**: mask array.\n*     -   **strideMask**: `mask` stride length.\n*     -   **offsetMask**: starting `mask` index.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*     -   **offsetY**: starting `y` index.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, offsetX, dtypeMask, mask, strideMask, offsetMask, dtypeY, y, strideY, offsetY ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 0, 'generic', [ 0, 0 ], 1, 0, 'generic', [ 0, 0 ], 1, 0 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - input array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {NonNegativeInteger} offsetX - starting `x` index\n\t* @param {*} dtypeMask - `mask` data type\n\t* @param {Collection} mask - mask array\n\t* @param {integer} strideMask - `mask` stride length\n\t* @param {NonNegativeInteger} offsetMask - starting `mask` index\n\t* @param {*} dtypeY - `y` data type\n\t* @param {Collection} y - destination array\n\t* @param {integer} strideY - `y` stride length\n\t* @param {NonNegativeInteger} offsetY - starting `y` index\n\t* @throws {TypeError} fifth argument must be a nonnegative integer\n\t* @throws {TypeError} ninth argument must be a nonnegative integer\n\t* @throws {TypeError} thirteenth argument must be a nonnegative integer\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `y`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, offsetX, dtypeMask, mask, strideMask, offsetMask, dtypeY, y, strideY, offsetY ) { // eslint-disable-line max-params\n\t\tvar viewMask;\n\t\tvar viewX;\n\t\tvar viewY;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif ( !isTypedArrayLike( x ) || !isTypedArrayLike( y ) || !isTypedArrayLike( mask ) ) {\n\t\t\tfallback( N, dtypeX, x, strideX, offsetX, dtypeMask, mask, strideMask, offsetMask, dtypeY, y, strideY, offsetY );\n\t\t\treturn y;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tdtypeY = resolve( dtypeY );\n\t\tdtypeMask = resolve( dtypeMask );\n\t\tif ( dtypeX === null || dtypeY === null || dtypeMask === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetX ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.', offsetX ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetY ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.', offsetY ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetMask ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Mask array offset must be a nonnegative integer. Value: `%s`.', offsetMask ) );\n\t\t}\n\t\toffsetX = minViewBufferIndex( N, strideX, offsetX );\n\t\toffsetY = minViewBufferIndex( N, strideY, offsetY );\n\t\toffsetMask = minViewBufferIndex( N, strideMask, offsetMask );\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, offsetX );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, offsetX );\n\t\t} else {\n\t\t\tviewX = offsetView( x, offsetX );\n\t\t}\n\t\tif ( dtypeY === COMPLEX64 ) {\n\t\t\tviewY = reinterpretComplex64( y, offsetY );\n\t\t} else if ( dtypeY === COMPLEX128 ) {\n\t\t\tviewY = reinterpretComplex128( y, offsetY );\n\t\t} else {\n\t\t\tviewY = offsetView( y, offsetY );\n\t\t}\n\t\tviewMask = offsetView( mask, offsetMask );\n\n\t\taddon( N, dtypeX, viewX, strideX, dtypeMask, viewMask, strideMask, dtypeY, viewY, strideY );\n\t\treturn y;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport safeCasts from '@stdlib/ndarray/safe-casts';\nimport resolveEnum from './../../../base/dtype-resolve-enum';\nimport resolveStr from './../../../base/dtype-resolve-str';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns the intersection of two sorted lists.\n*\n* @private\n* @param {ArrayLikeObject} list1 - first sorted list\n* @param {ArrayLikeObject} list2 - second sorted list\n* @returns {ArrayLikeObject} result\n*\n* @example\n* var list1 = [ 'a', 'b', 'c', 'd' ];\n* var list2 = [ 'b', 'd', 'e' ];\n*\n* var out = intersection( list1, list2 );\n* // returns [ 'b', 'd' ]\n*/\nfunction intersection( list1, list2 ) {\n\tvar out;\n\tvar M;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tM = list1.length;\n\tN = list2.length;\n\n\tout = [];\n\tk = 0;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tif ( k >= N ) {\n\t\t\tbreak;\n\t\t}\n\t\tv = list1[ i ];\n\t\tfor ( j = k; j < N; j++ ) {\n\t\t\tif ( v === list2[ j ] ) {\n\t\t\t\tk = j + 1;\n\t\t\t\tout.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/**\n* Resolves a list of data types to data type strings.\n*\n* @private\n* @param {ArrayLikeObject} dtypes - list of data types\n* @returns {(StringArray|Error)} data type strings (or an error)\n*\n* @example\n* var out = resolve( [ 1, 2, 3 ] );\n* // returns [...]\n*/\nfunction resolve( dtypes ) {\n\tvar out;\n\tvar dt;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < dtypes.length; i++ ) {\n\t\tdt = resolveStr( dtypes[ i ] );\n\t\tif ( dt === null ) {\n\t\t\treturn new TypeError( format( 'invalid argument. Must provide recognized data types. Unable to resolve a data type string. Value: `%s`.', dtypes[ i ] ) );\n\t\t}\n\t\tout.push( dt );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates a list of masked unary interface signatures from strided array data types.\n*\n* ## Notes\n*\n* -   The function returns a strided array having a stride length of `3` (i.e., every `3` elements define a masked unary interface signature).\n* -   For each signature (i.e., set of three consecutive non-overlapping strided array elements), the first element is the input data type, the second element is the mask data type, and the last element is the return data type.\n* -   All signatures follow type promotion rules.\n* -   The mask array data type is always `uint8`.\n*\n* @param {Array} dtypes1 - list of supported data types for the first argument\n* @param {Array} dtypes2 - list of supported data types for the output argument\n* @param {Options} [options] - options\n* @param {boolean} [options.enums=false] - boolean flag indicating whether to return signatures as a list of enumeration constants\n* @throws {TypeError} must provide recognized data types\n* @returns {Array} strided array containing masked unary interface signatures\n*\n* @example\n* var dtypes = [\n*     'float64',\n*     'float32',\n*     'int32',\n*     'uint8'\n* ];\n*\n* var sigs = signatures( dtypes, dtypes );\n* // e.g., returns [ 'float32', 'uint8', 'float32', ... ]\n*/\nfunction signatures( dtypes1, dtypes2, options ) {\n\tvar casts;\n\tvar opts;\n\tvar tmp;\n\tvar out;\n\tvar dt1;\n\tvar dt2;\n\tvar t1;\n\tvar M;\n\tvar i;\n\tvar j;\n\n\tif ( arguments.length > 2 ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\t// Resolve the list of provided data types to data type strings:\n\tdt1 = resolve( dtypes1 );\n\tif ( dt1 instanceof Error ) {\n\t\tthrow dt1;\n\t}\n\tif ( dtypes2 === dtypes1 ) { // don't do work if we don't need to\n\t\tdt2 = dt1;\n\t} else {\n\t\tdt2 = resolve( dtypes2 );\n\t\tif ( dt2 instanceof Error ) {\n\t\t\tthrow dt2;\n\t\t}\n\t}\n\t// Sort the list of return dtypes:\n\tdt2.sort();\n\n\t// Generate the list of signatures...\n\tM = dt1.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tt1 = dt1[ i ];\n\n\t\t// Resolve the list of safe casts for the input dtype:\n\t\tcasts = safeCasts( t1 );\n\t\tif ( casts === null ) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Remove safe casts which are not among the supported output dtypes:\n\t\tcasts = intersection( dt2, casts.sort() );\n\n\t\t// Generate signatures for allowed casts...\n\t\tfor ( j = 0; j < casts.length; j++ ) {\n\t\t\tout.push( t1, 'uint8', casts[ j ] );\n\t\t}\n\t}\n\tif ( opts.enums ) {\n\t\ttmp = [];\n\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\ttmp.push( resolveEnum( out[ i ] ) );\n\t\t}\n\t\tout = tmp;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default signatures;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dispatch to a native add-on applying a unary function to an input strided array according to a mask strided array.\n*\n* @module @stdlib/strided/base/mskunary-addon-dispatch\n*\n* @example\n* import dispatch from '@stdlib/strided/base/mskunary-addon-dispatch';\n*\n* function addon( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, dtypeMask, mask, strideMask, dtypeY, y, strideY ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 'generic', [ 0, 0 ], 1, 'generic', [ 0, 0 ], 1 );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable valid-typeof */\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar T = 'number';\n\n\n// FUNCTIONS //\n\n/**\n* Wraps a function and casts a function's return value to a complex number.\n*\n* ## Notes\n*\n* -   The returned function **assumes** that the wrapped function returns either a real or complex number.\n* -   The returned function **assumes** that, if a return value is non-numeric (i.e., not of type `number`), then the return value is a complex number. The returned function does **not** verify that non-numeric return values are, in fact, complex number objects. The returned function returns non-numeric return values from the wrapped function without modification.\n*\n* @param {Function} fcn - function to wrap\n* @param {NonNegativeInteger} nargs - number of arguments\n* @param {Function} ctor - complex number constructor\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a constructor function\n* @returns {Function} wrapped function\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import addf from '@stdlib/math/base/ops/addf';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var f = wrap( addf, 2, Complex64 );\n*\n* // ...\n*\n* var z = f( 3.0, 4.0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 7.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*/\nfunction wrap( fcn, nargs, ctor ) {\n\tvar fcns;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( nargs ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', nargs ) );\n\t}\n\tif ( !isFunction( ctor ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a constructor function. Value: `%s`.', ctor ) );\n\t}\n\tfcns = [ fcn0, fcn1, fcn2, fcn3, fcn4, fcn5 ];\n\treturn ( nargs <= 5 ) ? fcns[ nargs ] : fcnN;\n\n\t/**\n\t* Invokes a nullary function and returns a complex number.\n\t*\n\t* @private\n\t* @returns {Complex} result\n\t*/\n\tfunction fcn0() {\n\t\tvar r = fcn();\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t* Invokes a unary function and returns a complex number.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @returns {Complex} result\n\t*/\n\tfunction fcn1( x ) {\n\t\tvar r = fcn( x );\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t* Invokes a binary function and returns a complex number.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @returns {Complex} result\n\t*/\n\tfunction fcn2( x, y ) {\n\t\tvar r = fcn( x, y );\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t* Invokes a ternary function and returns a complex number.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @returns {Complex} result\n\t*/\n\tfunction fcn3( x, y, z ) {\n\t\tvar r = fcn( x, y, z );\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t* Invokes a quaternary function and returns a complex number.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @returns {Complex} result\n\t*/\n\tfunction fcn4( x, y, z, w ) {\n\t\tvar r = fcn( x, y, z, w );\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t* Invokes a quinary function and returns a complex number.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @returns {Complex} result\n\t*/\n\tfunction fcn5( x, y, z, w, v ) {\n\t\tvar r = fcn( x, y, z, w, v );\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n\n\t/**\n\t* Invokes a function and returns a complex number.\n\t*\n\t* @private\n\t* @param {...*} args - input values\n\t* @returns {Complex} result\n\t*/\n\tfunction fcnN() {\n\t\tvar args;\n\t\tvar r;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\tr = fcn.apply( null, args );\n\t\tif ( typeof r === T ) {\n\t\t\treturn new ctor( r, 0.0 );\n\t\t}\n\t\treturn r;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolve from './../../../base/dtype-resolve-str';\nimport Complex64 from '@stdlib/complex/float32';\nimport Complex128 from '@stdlib/complex/float64';\nimport wrap from '@stdlib/complex/base/cast-return';\n\n\n// VARIABLES //\n\nvar C64 = 'complex64';\nvar C128 = 'complex128';\nvar CTORS = {\n\t'complex64': Complex64,\n\t'complex128': Complex128\n};\n\n\n// FUNCTIONS //\n\n/**\n* Resolves a callback based on provided dtypes.\n*\n* @private\n* @param {Object} table - callback table\n* @param {Function} table.default - default callback\n* @param {Function} table.complex64 - callback for single-precision complex floating-point numbers\n* @param {Function} table.complex128 - callback for double-precision complex floating-point numbers\n* @param {string} t1 - dtype for input argument\n* @param {string} t2 - dtype for return value\n* @returns {Function} callback\n*/\nfunction resolveCallback( table, t1, t2 ) {\n\t// Signature: ?_z\n\tif ( t2 === C128 ) {\n\t\t// c_z or z_z\n\t\tif ( t1 === C64 || t1 === C128 ) {\n\t\t\t// Always perform computation in higher precision:\n\t\t\treturn table[ C128 ];\n\t\t}\n\t\t// d_z (cast the double-precision return value from `d_d` to a complex number)\n\t\treturn wrap( table.default, 1, CTORS[ t2 ] );\n\t}\n\t// Signature: ?_c\n\tif ( t2 === C64 ) {\n\t\t// c_c\n\t\tif ( t1 === C64 ) {\n\t\t\treturn table[ C64 ];\n\t\t}\n\t\t// z_c\n\t\tif ( t1 === C128 ) {\n\t\t\t// Always perform the computation in higher precision:\n\t\t\treturn table[ C128 ];\n\t\t}\n\t\t// d_c (cast the double-precision return value from `d_d` to a complex number)\n\t\treturn wrap( table.default, 1, CTORS[ t2 ] );\n\t}\n\t// Signature: ?_o\n\tif ( t2 === 'generic' ) {\n\t\t// z_o\n\t\tif ( t1 === C128 ) {\n\t\t\treturn table[ C128 ]; // Signature: z_o_as_z_z\n\t\t}\n\t\t// c_o\n\t\tif ( t1 === C64 ) {\n\t\t\treturn table[ C64 ]; // Signature: c_o_as_c_c\n\t\t}\n\t\t// d_o\n\t\treturn table.default; // Signature: d_o_as_d_d\n\t}\n\treturn table.default;\n}\n\n\n// MAIN //\n\n/**\n* Assigns callbacks to masked unary interfaces according to type promotion rules.\n*\n* ## Notes\n*\n* -   The function assumes that the provided signature array has the following properties:\n*\n*     -   a strided array having a stride length of `3` (i.e., every `3` elements define a masked unary interface signature).\n*     -   for each signature (i.e., set of three consecutive non-overlapping strided array elements), the first element is the input data type, the second element is the mask data type, and the last element is the return data type.\n*     -   all signatures (excluding the mask data type) follow type promotion rules.\n*\n* -   Based on type promotion rules, we can simply use the callback for `float64` (i.e., the assumed \"default\") for all interfaces not involving complex numbers, even for `float32`, as we shouldn't need to explicitly downcast strided array values. The only time we need to return `float32` values is when input arrays are already `float32` or of a type which can be safely represented in `float32` without concern for truncation.\n*\n* @param {Object} table - callback table\n* @param {Function} table.default - default callback\n* @param {Function} table.complex64 - callback for single-precision complex floating-point numbers\n* @param {Function} table.complex128 - callback for double-precision complex floating-point numbers\n* @param {ArrayLikeObject} signatures - strided array containing masked unary interface signatures\n* @returns {Array<Function>} list of callbacks\n*\n* @example\n* import signatures from '@stdlib/strided/base/mskunary-dtype-signatures';\n* import identity from '@stdlib/math/base/special/identity';\n* import cidentity from '@stdlib/math/base/special/cidentity';\n* import cidentityf from '@stdlib/math/base/special/cidentityf';\n*\n* var dtypes = [\n*     'float64',\n*     'float32',\n*     'int32',\n*     'uint8'\n* ];\n*\n* var sigs = signatures( dtypes, dtypes );\n* // returns [...]\n*\n* var table = {\n*     'default': identity,\n*     'complex64': cidentityf,\n*     'complex128': cidentity\n* };\n*\n* var list = callbacks( table, sigs );\n* // returns [...]\n*/\nfunction callbacks( table, signatures ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < signatures.length; i += 3 ) {\n\t\tt1 = resolve( signatures[ i ] );\n\t\tt2 = resolve( signatures[ i+2 ] );\n\t\tout.push( resolveCallback( table, t1, t2 ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default callbacks;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './nullary.js';\nimport accessors from './accessors.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a nullary callback and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride length for the output array\n* @param {Callback} fcn - nullary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n*\n* nullary( [ x ], shape, strides, fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 3.0, 3.0, 3.0, 3.0, 3.0 ]\n*/\nfunction nullary( arrays, shape, strides, fcn ) {\n\tvar xset;\n\tvar x;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txset = setAccessor;\n\t}\n\tif ( xset ) {\n\t\txset = xset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, [ xset ], fcn );\n\t}\n\treturn strided( arrays, shape, strides, fcn );\n}\n\n\n// EXPORTS //\n\nexport default nullary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a nullary callback and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride length for the output array\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the output array\n* @param {Callback} fcn - nullary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value * 2.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n*\n* nullary( [ x ], shape, strides, [ set ], fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 6.0, 6.0, 6.0, 6.0, 6.0 ]\n*/\nfunction nullary( arrays, shape, strides, accessors, fcn ) {\n\tvar xset;\n\tvar sx;\n\tvar ix;\n\tvar x;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tx = arrays[ 0 ];\n\txset = accessors[ 0 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\txset( x, ix, fcn() );\n\t\tix += sx;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nullary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a nullary callback and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride length for the output array\n* @param {Callback} fcn - nullary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n*\n* nullary( [ x ], shape, strides, fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 3.0, 3.0, 3.0, 3.0, 3.0 ]\n*/\nfunction nullary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar ix;\n\tvar x;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tx = arrays[ 0 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tx[ ix ] = fcn();\n\t\tix += sx;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nullary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a nullary callback and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/nullary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import nullary from '@stdlib/strided/base/nullary';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n*\n* nullary( [ x ], shape, strides, fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 3.0, 3.0, 3.0, 3.0, 3.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import nullary from '@stdlib/strided/base/nullary';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n* var offsets = [ 0 ];\n*\n* nullary.ndarray( [ x ], shape, strides, offsets, fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 3.0, 3.0, 3.0, 3.0, 3.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './nullary.ndarray.js';\nimport accessors from './accessors.ndarray.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a nullary callback and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride length for the output array\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the output array\n* @param {Callback} fcn - nullary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n* var offsets = [ 0 ];\n*\n* nullary( [ x ], shape, strides, offsets, fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 3.0, 3.0, 3.0, 3.0, 3.0 ]\n*/\nfunction nullary( arrays, shape, strides, offsets, fcn ) {\n\tvar xset;\n\tvar x;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txset = setAccessor;\n\t}\n\tif ( xset ) {\n\t\txset = xset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, offsets, [ xset ], fcn );\n\t}\n\treturn strided( arrays, shape, strides, offsets, fcn );\n}\n\n\n// EXPORTS //\n\nexport default nullary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a nullary callback and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride length for the output array\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the output array\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the output array\n* @param {Callback} fcn - nullary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value * 2.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n* var offsets = [ 0 ];\n*\n* nullary( [ x ], shape, strides, offsets, [ set ], fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 6.0, 6.0, 6.0, 6.0, 6.0 ]\n*/\nfunction nullary( arrays, shape, strides, offsets, accessors, fcn ) {\n\tvar xset;\n\tvar sx;\n\tvar ix;\n\tvar x;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tsx = strides[ 0 ];\n\tx = arrays[ 0 ];\n\txset = accessors[ 0 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\txset( x, ix, fcn() );\n\t\tix += sx;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nullary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a nullary callback and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride length for the output array\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting index (i.e., index offset) for the output array\n* @param {Callback} fcn - nullary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function fill() {\n*     return 3.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n*\n* var shape = [ x.length ];\n* var strides = [ 1 ];\n* var offsets = [ 0 ];\n*\n* nullary( [ x ], shape, strides, offsets, fill );\n*\n* console.log( x );\n* // => <Float64Array>[ 3.0, 3.0, 3.0, 3.0, 3.0 ]\n*/\nfunction nullary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar ix;\n\tvar x;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tsx = strides[ 0 ];\n\tx = arrays[ 0 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tx[ ix ] = fcn();\n\t\tix += sx;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default nullary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a nullary function.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: output array.\n*     -   **strideX**: `x` stride length.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: output array.\n*     -   **strideX**: `x` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: output array.\n*     -   **strideX**: `x` stride length.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - output array\n\t* @param {integer} strideX - `x` stride length\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `x`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX ) {\n\t\tvar viewX;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif ( !isTypedArrayLike( x ) ) {\n\t\t\tfallback( N, dtypeX, x, strideX );\n\t\t\treturn x;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tif ( dtypeX === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, 0 );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, 0 );\n\t\t} else {\n\t\t\tviewX = x;\n\t\t}\n\t\taddon( N, dtypeX, viewX, strideX );\n\t\treturn x;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport offsetView from './../../../base/offset-view';\nimport minViewBufferIndex from './../../../base/min-view-buffer-index';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a nullary function using alternative indexing semantics.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: output array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: output array.\n*     -   **strideX**: `x` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: output array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, offsetX ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 0 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - output array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {NonNegativeInteger} offsetX - starting `x` index\n\t* @throws {TypeError} fifth argument must be a nonnegative integer\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `x`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, offsetX ) {\n\t\tvar viewX;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif ( !isTypedArrayLike( x ) ) {\n\t\t\tfallback( N, dtypeX, x, strideX, offsetX );\n\t\t\treturn x;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tif ( dtypeX === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetX ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.', offsetX ) );\n\t\t}\n\t\toffsetX = minViewBufferIndex( N, strideX, offsetX );\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, offsetX );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, offsetX );\n\t\t} else {\n\t\t\tviewX = offsetView( x, offsetX );\n\t\t}\n\t\taddon( N, dtypeX, viewX, strideX );\n\t\treturn x;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing four input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function add( x, y, z, w ) {\n*     return x + y + z + w;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1 ];\n*\n* quaternary( [ x, y, z, w, u ], shape, strides, add );\n*\n* console.log( u );\n* // => <Float64Array>[ 4.0, 8.0, 12.0, 16.0, 20.0 ]\n*/\nfunction quaternary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar sw;\n\tvar su;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar iw;\n\tvar iu;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tsw = strides[ 3 ];\n\tsu = strides[ 4 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( sz < 0 ) {\n\t\tiz = (1-N) * sz;\n\t} else {\n\t\tiz = 0;\n\t}\n\tif ( sw < 0 ) {\n\t\tiw = (1-N) * sw;\n\t} else {\n\t\tiw = 0;\n\t}\n\tif ( su < 0 ) {\n\t\tiu = (1-N) * su;\n\t} else {\n\t\tiu = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tu[ iu ] = fcn( x[ ix ], y[ iy ], z[ iz ], w[ iw ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t\tiw += sw;\n\t\tiu += su;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quaternary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quinary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing five input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function add( x, y, z, w, u ) {\n*     return x + y + z + w + u;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var v = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1, 1 ];\n*\n* quinary( [ x, y, z, w, u, v ], shape, strides, add );\n*\n* console.log( v );\n* // => <Float64Array>[ 5.0, 10.0, 15.0, 20.0, 25.0 ]\n*/\nfunction quinary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar sw;\n\tvar su;\n\tvar sv;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar iw;\n\tvar iu;\n\tvar iv;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tsw = strides[ 3 ];\n\tsu = strides[ 4 ];\n\tsv = strides[ 5 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( sz < 0 ) {\n\t\tiz = (1-N) * sz;\n\t} else {\n\t\tiz = 0;\n\t}\n\tif ( sw < 0 ) {\n\t\tiw = (1-N) * sw;\n\t} else {\n\t\tiw = 0;\n\t}\n\tif ( su < 0 ) {\n\t\tiu = (1-N) * su;\n\t} else {\n\t\tiu = 0;\n\t}\n\tif ( sv < 0 ) {\n\t\tiv = (1-N) * sv;\n\t} else {\n\t\tiv = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tv = arrays[ 5 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv[ iv ] = fcn( x[ ix ], y[ iy ], z[ iz ], w[ iw ], u[ iu ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t\tiw += sw;\n\t\tiu += su;\n\t\tiv += sv;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quinary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a single-precision floating-point strided input array and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float32Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply\n* @returns {Float32Array} `y`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( x.length );\n*\n* smap( x.length, x, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction smap( N, x, strideX, y, strideY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = fcn( x[ ix ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default smap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to single-precision floating-point strided input arrays and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float32Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {Float32Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {Function} fcn - binary function to apply\n* @returns {Float32Array} `z`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import addf from '@stdlib/math/base/ops/addf';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float32Array( x.length );\n*\n* smap2( x.length, x, 1, y, 1, z, 1, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction smap2( N, x, strideX, y, strideY, z, strideZ, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( strideZ < 0 ) {\n\t\tiz = (1-N) * strideZ;\n\t} else {\n\t\tiz = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default smap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a single-precision floating-point strided input array according to a strided mask array and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {Float32Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply\n* @returns {Float32Array} `y`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float32Array( x.length );\n*\n* smskmap( x.length, x, 1, m, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction smskmap( N, x, strideX, mask, strideMask, y, strideY, fcn ) {\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideMask < 0 ) {\n\t\tim = (1-N) * strideMask;\n\t} else {\n\t\tim = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\ty[ iy ] = fcn( x[ ix ] );\n\t\t}\n\t\tix += strideX;\n\t\tim += strideMask;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default smskmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to single-precision floating-point strided input arrays and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float32Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {Float32Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {Function} fcn - binary function to apply\n* @returns {Float32Array} `z`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n* import addf from '@stdlib/math/base/ops/addf';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float32Array( x.length );\n*\n* smskmap2( x.length, x, 1, y, 1, m, 1, z, 1, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*/\nfunction smskmap2( N, x, strideX, y, strideY, mask, strideMask, z, strideZ, fcn ) { // eslint-disable-line max-len\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar im;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( strideZ < 0 ) {\n\t\tiz = (1-N) * strideZ;\n\t} else {\n\t\tiz = 0;\n\t}\n\tif ( strideMask < 0 ) {\n\t\tim = (1-N) * strideMask;\n\t} else {\n\t\tim = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t\tim += strideMask;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default smskmap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a ternary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing three input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function add( x, y, z ) {\n*     return x + y + z;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1 ];\n*\n* ternary( [ x, y, z, w ], shape, strides, add );\n*\n* console.log( w );\n* // => <Float64Array>[ 3.0, 6.0, 9.0, 12.0, 15.0 ]\n*/\nfunction ternary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar sw;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar iw;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tsw = strides[ 3 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tif ( sz < 0 ) {\n\t\tiz = (1-N) * sz;\n\t} else {\n\t\tiz = 0;\n\t}\n\tif ( sw < 0 ) {\n\t\tiw = (1-N) * sw;\n\t} else {\n\t\tiw = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tw[ iw ] = fcn( x[ ix ], y[ iy ], z[ iz ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t\tiw += sw;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ternary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a strided array element using an accessor method.\n*\n* @private\n* @param {Collection} x - strided array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './unary.js';\nimport accessors from './accessors.js';\nimport getIndexed from './getter.js';\nimport getAccessor from './getter.accessor.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n*\n* unary( [ x, y ], shape, strides, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction unary( arrays, shape, strides, fcn ) {\n\tvar xget;\n\tvar yset;\n\tvar x;\n\tvar y;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txget = getAccessor;\n\t}\n\ty = arrays[ 1 ];\n\tif ( y.get && y.set ) {\n\t\tyset = setAccessor;\n\t}\n\tif ( xget || yset ) {\n\t\txget = xget || getIndexed;\n\t\tyset = yset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, [ xget, yset ], fcn );\n\t}\n\treturn strided( arrays, shape, strides, fcn );\n}\n\n\n// EXPORTS //\n\nexport default unary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the input and output arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* function get( buf, idx ) {\n*     return buf[ idx ] * 2.0;\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n*\n* unary( [ x, y ], shape, strides, [ get, set ], scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*/\nfunction unary( arrays, shape, strides, accessors, fcn ) {\n\tvar xget;\n\tvar yset;\n\tvar sx;\n\tvar sy;\n\tvar ix;\n\tvar iy;\n\tvar x;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\txget = accessors[ 0 ];\n\tyset = accessors[ 1 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tyset( y, iy, fcn( xget( x, ix ) ) );\n\t\tix += sx;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n*\n* unary( [ x, y ], shape, strides, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction unary( arrays, shape, strides, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar ix;\n\tvar iy;\n\tvar x;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tif ( sx < 0 ) {\n\t\tix = (1-N) * sx;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( sy < 0 ) {\n\t\tiy = (1-N) * sy;\n\t} else {\n\t\tiy = 0;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = fcn( x[ ix ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dispatch to a native add-on applying a nullary function.\n*\n* @module @stdlib/strided/base/nullary-addon-dispatch\n*\n* @example\n* import dispatch from '@stdlib/strided/base/nullary-addon-dispatch';\n*\n* function addon( N, dtypeX, x, strideX ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1 );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a quaternary callback to strided input array elements and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/quaternary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import quaternary from '@stdlib/strided/base/quaternary';\n*\n* function add( x, y, z, w ) {\n*     return x + y + z + w;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1 ];\n*\n* quaternary( [ x, y, z, w, u ], shape, strides, add );\n*\n* console.log( u );\n* // => <Float64Array>[ 4.0, 8.0, 12.0, 16.0, 20.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import quaternary from '@stdlib/strided/base/quaternary';\n*\n* function add( x, y, z, w ) {\n*     return x + y + z + w;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1 ];\n* var offsets = [ 0, 0, 0, 0, 0 ];\n*\n* quaternary.ndarray( [ x, y, z, w, u ], shape, strides, offsets, add );\n*\n* console.log( u );\n* // => <Float64Array>[ 4.0, 8.0, 12.0, 16.0, 20.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing four input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function add( x, y, z, w ) {\n*     return x + y + z + w;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1 ];\n* var offsets = [ 0, 0, 0, 0, 0 ];\n*\n* quaternary( [ x, y, z, w, u ], shape, strides, offsets, add );\n*\n* console.log( u );\n* // => <Float64Array>[ 4.0, 8.0, 12.0, 16.0, 20.0 ]\n*/\nfunction quaternary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar sw;\n\tvar su;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar iw;\n\tvar iu;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tiz = offsets[ 2 ];\n\tiw = offsets[ 3 ];\n\tiu = offsets[ 4 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tsw = strides[ 3 ];\n\tsu = strides[ 4 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tu[ iu ] = fcn( x[ ix ], y[ iy ], z[ iz ], w[ iw ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t\tiw += sw;\n\t\tiu += su;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quaternary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a quinary callback to strided input array elements and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/quinary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import quinary from '@stdlib/strided/base/quinary';\n*\n* function add( x, y, z, w, u ) {\n*     return x + y + z + w + u;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var v = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1, 1 ];\n*\n* quinary( [ x, y, z, w, u, v ], shape, strides, add );\n*\n* console.log( v );\n* // => <Float64Array>[ 5.0, 10.0, 15.0, 20.0, 25.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import quinary from '@stdlib/strided/base/quinary';\n*\n* function add( x, y, z, w, u ) {\n*     return x + y + z + w + u;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var v = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1, 1 ];\n* var offsets = [ 0, 0, 0, 0, 0, 0 ];\n*\n* quinary.ndarray( [ x, y, z, w, u, v ], shape, strides, offsets, add );\n*\n* console.log( v );\n* // => <Float64Array>[ 5.0, 10.0, 15.0, 20.0, 25.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quinary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing five input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function add( x, y, z, w, u ) {\n*     return x + y + z + w + u;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var u = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var v = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1, 1, 1 ];\n* var offsets = [ 0, 0, 0, 0, 0, 0 ];\n*\n* quinary( [ x, y, z, w, u, v ], shape, strides, offsets, add );\n*\n* console.log( v );\n* // => <Float64Array>[ 5.0, 10.0, 15.0, 20.0, 25.0 ]\n*/\nfunction quinary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar sw;\n\tvar su;\n\tvar sv;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar iw;\n\tvar iu;\n\tvar iv;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tiz = offsets[ 2 ];\n\tiw = offsets[ 3 ];\n\tiu = offsets[ 4 ];\n\tiv = offsets[ 5 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tsw = strides[ 3 ];\n\tsu = strides[ 4 ];\n\tsv = strides[ 5 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tv = arrays[ 5 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv[ iv ] = fcn( x[ ix ], y[ iy ], z[ iz ], w[ iw ], u[ iu ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t\tiw += sw;\n\t\tiu += su;\n\t\tiv += sv;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quinary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to a single-precision floating-point strided input array and assign results to a single-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/smap\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import smap from '@stdlib/strided/base/smap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( x.length );\n*\n* smap( x.length, x, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import smap from '@stdlib/strided/base/smap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( x.length );\n*\n* smap.ndarray( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a single-precision floating-point strided input array and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float32Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply\n* @returns {Float32Array} `y`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( x.length );\n*\n* smap( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction smap( N, x, strideX, offsetX, y, strideY, offsetY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = fcn( x[ ix ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default smap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a binary function to single-precision floating-point strided input arrays and assign results to a single-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/smap2\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import addf from '@stdlib/math/base/ops/addf';\n* import smap2 from '@stdlib/strided/base/smap2';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float32Array( x.length );\n*\n* smap2( x.length, x, 1, y, 1, z, 1, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import addf from '@stdlib/math/base/ops/addf';\n* import smap2 from '@stdlib/strided/base/smap2';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float32Array( x.length );\n*\n* smap2.ndarray( x.length, x, 1, 0, y, 1, 0, z, 1, 0, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to single-precision floating-point strided input arrays and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float32Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Float32Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {NonNegativeInteger} offsetZ - starting `z` index\n* @param {Function} fcn - binary function to apply\n* @returns {Float32Array} `z`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import addf from '@stdlib/math/base/ops/addf';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float32Array( x.length );\n*\n* smap2( x.length, x, 1, 0, y, 1, 0, z, 1, 0, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 6.0, 8.0, 10.0 ]\n*/\nfunction smap2( N, x, strideX, offsetX, y, strideY, offsetY, z, strideZ, offsetZ, fcn ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tiz = offsetZ;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default smap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to a single-precision floating-point strided input array according to a strided mask array and assign results to a single-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/smskmap\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n* import smskmap from '@stdlib/strided/base/smskmap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float32Array( x.length );\n*\n* smskmap( x.length, x, 1, m, 1, y, 1, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n* import smskmap from '@stdlib/strided/base/smskmap';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float32Array( x.length );\n*\n* smskmap.ndarray( x.length, x, 1, 0, m, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a single-precision floating-point strided input array according to a strided mask array and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {NonNegativeInteger} offsetMask - starting `mask` index\n* @param {Float32Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply\n* @returns {Float32Array} `y`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var y = new Float32Array( x.length );\n*\n* smskmap( x.length, x, 1, 0, m, 1, 0, y, 1, 0, scale );\n*\n* console.log( y );\n* // => <Float32Array>[ 10.0, 20.0, 0.0, 40.0, 50.0 ]\n*/\nfunction smskmap( N, x, strideX, offsetX, mask, strideMask, offsetMask, y, strideY, offsetY, fcn ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar im;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tim = offsetMask;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\ty[ iy ] = fcn( x[ ix ] );\n\t\t}\n\t\tix += strideX;\n\t\tim += strideMask;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default smskmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a binary function to single-precision floating-point strided input arrays according to a strided mask array and assign results to a single-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/smskmap2\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n* import addf from '@stdlib/math/base/ops/addf';\n* import smskmap2 from '@stdlib/strided/base/smskmap2';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float32Array( x.length );\n*\n* smskmap2( x.length, x, 1, y, 1, m, 1, z, 1, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n* import addf from '@stdlib/math/base/ops/addf';\n* import smskmap2 from '@stdlib/strided/base/smskmap2';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float32Array( x.length );\n*\n* smskmap2.ndarray( x.length, x, 1, 0, y, 1, 0, m, 1, 0, z, 1, 0, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary function to single-precision floating-point strided input arrays according to a strided mask array and assigns results to a single-precision floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Float32Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float32Array} y - input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Uint8Array} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {NonNegativeInteger} offsetMask - starting `mask` index\n* @param {Float32Array} z - destination array\n* @param {integer} strideZ - `z` stride length\n* @param {NonNegativeInteger} offsetZ - starting `z` index\n* @param {Function} fcn - binary function to apply\n* @returns {Float32Array} `z`\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n* import Uint8Array from '@stdlib/array/uint8';\n* import addf from '@stdlib/math/base/ops/addf';\n*\n* var x = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float32Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var m = new Uint8Array( [ 0, 0, 1, 0, 0 ] );\n* var z = new Float32Array( x.length );\n*\n* smskmap2( x.length, x, 1, 0, y, 1, 0, m, 1, 0, z, 1, 0, addf );\n*\n* console.log( z );\n* // => <Float32Array>[ 2.0, 4.0, 0.0, 8.0, 10.0 ]\n*/\nfunction smskmap2( N, x, strideX, offsetX, y, strideY, offsetY, mask, strideMask, offsetMask, z, strideZ, offsetZ, fcn ) { // eslint-disable-line max-len, max-params\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar im;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn z;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tiz = offsetZ;\n\tim = offsetMask;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\tz[ iz ] = fcn( x[ ix ], y[ iy ] );\n\t\t}\n\t\tix += strideX;\n\t\tiy += strideY;\n\t\tiz += strideZ;\n\t\tim += strideMask;\n\t}\n\treturn z;\n}\n\n\n// EXPORTS //\n\nexport default smskmap2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a ternary callback to strided input array elements and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/ternary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import ternary from '@stdlib/strided/base/ternary';\n*\n* function add( x, y, z ) {\n*     return x + y + z;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1 ];\n*\n* ternary( [ x, y, z, w ], shape, strides, add );\n*\n* console.log( w );\n* // => <Float64Array>[ 3.0, 6.0, 9.0, 12.0, 15.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import ternary from '@stdlib/strided/base/ternary';\n*\n* function add( x, y, z ) {\n*     return x + y + z;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1 ];\n* var offsets = [ 0, 0, 0, 0 ];\n*\n* ternary.ndarray( [ x, y, z, w ], shape, strides, offsets, add );\n*\n* console.log( w );\n* // => <Float64Array>[ 3.0, 6.0, 9.0, 12.0, 15.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a ternary callback to strided input array elements and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing three input arrays and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function add( x, y, z ) {\n*     return x + y + z;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var z = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var w = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1, 1, 1 ];\n* var offsets = [ 0, 0, 0, 0 ];\n*\n* ternary( [ x, y, z, w ], shape, strides, offsets, add );\n*\n* console.log( w );\n* // => <Float64Array>[ 3.0, 6.0, 9.0, 12.0, 15.0 ]\n*/\nfunction ternary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar sz;\n\tvar sw;\n\tvar ix;\n\tvar iy;\n\tvar iz;\n\tvar iw;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tiz = offsets[ 2 ];\n\tiw = offsets[ 3 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tsz = strides[ 2 ];\n\tsw = strides[ 3 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tw[ iw ] = fcn( x[ ix ], y[ iy ], z[ iz ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t\tiz += sz;\n\t\tiw += sw;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ternary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary callback to elements in a strided input array and assign results to elements in a strided output array.\n*\n* @module @stdlib/strided/base/unary\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import unary from '@stdlib/strided/base/unary';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n*\n* unary( [ x, y ], shape, strides, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import unary from '@stdlib/strided/base/unary';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n* var offsets = [ 0, 0 ];\n*\n* unary.ndarray( [ x, y ], shape, strides, offsets, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport strided from './unary.ndarray.js';\nimport accessors from './accessors.ndarray.js';\nimport getIndexed from './getter.js';\nimport getAccessor from './getter.accessor.js';\nimport setIndexed from './setter.js';\nimport setAccessor from './setter.accessor.js';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array and assigns results to elements in a strided output array.\n*\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n* var offsets = [ 0, 0 ];\n*\n* unary( [ x, y ], shape, strides, offsets, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction unary( arrays, shape, strides, offsets, fcn ) {\n\tvar xget;\n\tvar yset;\n\tvar x;\n\tvar y;\n\n\t// Note: we intentionally use weak checks for accessors and do not explicitly check for functions for (perhaps marginally) better performance...\n\tx = arrays[ 0 ];\n\tif ( x.get && x.set ) {\n\t\txget = getAccessor;\n\t}\n\ty = arrays[ 1 ];\n\tif ( y.get && y.set ) {\n\t\tyset = setAccessor;\n\t}\n\tif ( xget || yset ) {\n\t\txget = xget || getIndexed;\n\t\tyset = yset || setIndexed;\n\t\treturn accessors( arrays, shape, strides, offsets, [ xget, yset ], fcn ); // eslint-disable-line max-len\n\t}\n\treturn strided( arrays, shape, strides, offsets, fcn );\n}\n\n\n// EXPORTS //\n\nexport default unary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {ArrayLikeObject<Function>} accessors - array-like object containing accessors for the input and output arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* function get( buf, idx ) {\n*     return buf[ idx ] * 2.0;\n* }\n*\n* function set( buf, idx, value ) {\n*     buf[ idx ] = value;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n* var offsets = [ 0, 0 ];\n*\n* unary( [ x, y ], shape, strides, offsets, [ get, set ], scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*/\nfunction unary( arrays, shape, strides, offsets, accessors, fcn ) {\n\tvar xget;\n\tvar yset;\n\tvar sx;\n\tvar sy;\n\tvar ix;\n\tvar iy;\n\tvar x;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\txget = accessors[ 0 ];\n\tyset = accessors[ 1 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tyset( y, iy, fcn( xget( x, ix ) ) );\n\t\tix += sx;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a strided input array and assigns results to elements in a strided output array.\n*\n* @private\n* @param {ArrayLikeObject<Collection>} arrays - array-like object containing one input array and one output array\n* @param {NonNegativeIntegerArray} shape - array-like object containing a single element, the number of indexed elements\n* @param {IntegerArray} strides - array-like object containing the stride lengths for the input and output arrays\n* @param {NonNegativeIntegerArray} offsets - array-like object containing the starting indices (i.e., index offsets) for the input and output arrays\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( x.length );\n*\n* var shape = [ x.length ];\n* var strides = [ 1, 1 ];\n* var offsets = [ 0, 0 ];\n*\n* unary( [ x, y ], shape, strides, offsets, scale );\n*\n* console.log( y );\n* // => <Float64Array>[ 10.0, 20.0, 30.0, 40.0, 50.0 ]\n*/\nfunction unary( arrays, shape, strides, offsets, fcn ) {\n\tvar sx;\n\tvar sy;\n\tvar ix;\n\tvar iy;\n\tvar x;\n\tvar y;\n\tvar N;\n\tvar i;\n\n\tN = shape[ 0 ];\n\tif ( N <= 0 ) {\n\t\treturn;\n\t}\n\tix = offsets[ 0 ];\n\tiy = offsets[ 1 ];\n\tsx = strides[ 0 ];\n\tsy = strides[ 1 ];\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = fcn( x[ ix ] );\n\t\tix += sx;\n\t\tiy += sy;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a unary function to an input strided array.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type (enumeration constant).\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 'generic', [ 0, 0 ], 1 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - input array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {*} dtypeY - `y` data type\n\t* @param {Collection} y - destination array\n\t* @param {integer} strideY - `y` stride length\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `y`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n\t\tvar viewX;\n\t\tvar viewY;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif ( !isTypedArrayLike( x ) || !isTypedArrayLike( y ) ) {\n\t\t\tfallback( N, dtypeX, x, strideX, dtypeY, y, strideY );\n\t\t\treturn y;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tdtypeY = resolve( dtypeY );\n\t\tif ( dtypeX === null || dtypeY === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, 0 );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, 0 );\n\t\t} else {\n\t\t\tviewX = x;\n\t\t}\n\t\tif ( dtypeY === COMPLEX64 ) {\n\t\t\tviewY = reinterpretComplex64( y, 0 );\n\t\t} else if ( dtypeY === COMPLEX128 ) {\n\t\t\tviewY = reinterpretComplex128( y, 0 );\n\t\t} else {\n\t\t\tviewY = y;\n\t\t}\n\t\taddon( N, dtypeX, viewX, strideX, dtypeY, viewY, strideY );\n\t\treturn y;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport resolve from './../../../base/dtype-resolve-enum';\nimport reinterpretComplex64 from './../../../base/reinterpret-complex64';\nimport reinterpretComplex128 from './../../../base/reinterpret-complex128';\nimport offsetView from './../../../base/offset-view';\nimport minViewBufferIndex from './../../../base/min-view-buffer-index';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar COMPLEX64 = resolve( 'complex64' );\nvar COMPLEX128 = resolve( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Returns a function which dispatches to a native add-on applying a unary function to an input strided array using alternative indexing semantics.\n*\n* ## Notes\n*\n* -   The returned function has the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*     -   **offsetY**: starting `y` index.\n*\n* -   The add-on function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, dtypeY, y, strideY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type (enumeration constant).\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **dtypeY**: `y` data type (enumeration constant).\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*\n* -   The fallback function should have the following signature:\n*\n*     ```text\n*     f( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY )\n*     ```\n*\n*     where\n*\n*     -   **N**: number of indexed elements.\n*     -   **dtypeX**: `x` data type.\n*     -   **x**: input array.\n*     -   **strideX**: `x` stride length.\n*     -   **offsetX**: starting `x` index.\n*     -   **dtypeY**: `y` data type.\n*     -   **y**: output array.\n*     -   **strideY**: `y` stride length.\n*     -   **offsetY**: starting `y` index.\n*\n* @param {Function} addon - add-on interface\n* @param {Function} fallback - fallback function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} dispatch function\n*\n* @example\n* function addon( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 0, 'generic', [ 0, 0 ], 1, 0 );\n*/\nfunction dispatch( addon, fallback ) {\n\tif ( !isFunction( addon ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', addon ) );\n\t}\n\tif ( !isFunction( fallback ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fallback ) );\n\t}\n\treturn dispatcher;\n\n\t/**\n\t* Dispatches to a native add-on.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - `x` data type\n\t* @param {Collection} x - input array\n\t* @param {integer} strideX - `x` stride length\n\t* @param {NonNegativeInteger} offsetX - starting `x` index\n\t* @param {*} dtypeY - `y` data type\n\t* @param {Collection} y - destination array\n\t* @param {integer} strideY - `y` stride length\n\t* @param {NonNegativeInteger} offsetY - starting `y` index\n\t* @throws {TypeError} fifth argument must be a nonnegative integer\n\t* @throws {TypeError} ninth argument must be a nonnegative integer\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {Collection} `y`\n\t*/\n\tfunction dispatcher( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY ) { // eslint-disable-line max-len\n\t\tvar viewX;\n\t\tvar viewY;\n\n\t\t// WARNING: we assume that, if we're provided something resembling a typed array, we're provided a typed array; however, this can lead to potential unintended errors as the native add-on may not work with non-typed array objects (e.g., generic arrays)...\n\t\tif ( !isTypedArrayLike( x ) || !isTypedArrayLike( y ) ) {\n\t\t\tfallback( N, dtypeX, x, strideX, offsetX, dtypeY, y, strideY, offsetY ); // eslint-disable-line max-len\n\t\t\treturn y;\n\t\t}\n\t\tdtypeX = resolve( dtypeX );\n\t\tdtypeY = resolve( dtypeY );\n\t\tif ( dtypeX === null || dtypeY === null ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetX ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.', offsetX ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( offsetY ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.', offsetY ) );\n\t\t}\n\t\toffsetX = minViewBufferIndex( N, strideX, offsetX );\n\t\toffsetY = minViewBufferIndex( N, strideY, offsetY );\n\t\tif ( dtypeX === COMPLEX64 ) {\n\t\t\tviewX = reinterpretComplex64( x, offsetX );\n\t\t} else if ( dtypeX === COMPLEX128 ) {\n\t\t\tviewX = reinterpretComplex128( x, offsetX );\n\t\t} else {\n\t\t\tviewX = offsetView( x, offsetX );\n\t\t}\n\t\tif ( dtypeY === COMPLEX64 ) {\n\t\t\tviewY = reinterpretComplex64( y, offsetY );\n\t\t} else if ( dtypeY === COMPLEX128 ) {\n\t\t\tviewY = reinterpretComplex128( y, offsetY );\n\t\t} else {\n\t\t\tviewY = offsetView( y, offsetY );\n\t\t}\n\t\taddon( N, dtypeX, viewX, strideX, dtypeY, viewY, strideY );\n\t\treturn y;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport safeCasts from '@stdlib/ndarray/safe-casts';\nimport resolveEnum from './../../../base/dtype-resolve-enum';\nimport resolveStr from './../../../base/dtype-resolve-str';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Returns the intersection of two sorted lists.\n*\n* @private\n* @param {ArrayLikeObject} list1 - first sorted list\n* @param {ArrayLikeObject} list2 - second sorted list\n* @returns {ArrayLikeObject} result\n*\n* @example\n* var list1 = [ 'a', 'b', 'c', 'd' ];\n* var list2 = [ 'b', 'd', 'e' ];\n*\n* var out = intersection( list1, list2 );\n* // returns [ 'b', 'd' ]\n*/\nfunction intersection( list1, list2 ) {\n\tvar out;\n\tvar M;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tM = list1.length;\n\tN = list2.length;\n\n\tout = [];\n\tk = 0;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tif ( k >= N ) {\n\t\t\tbreak;\n\t\t}\n\t\tv = list1[ i ];\n\t\tfor ( j = k; j < N; j++ ) {\n\t\t\tif ( v === list2[ j ] ) {\n\t\t\t\tk = j + 1;\n\t\t\t\tout.push( v );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/**\n* Resolves a list of data types to data type strings.\n*\n* @private\n* @param {ArrayLikeObject} dtypes - list of data types\n* @returns {(StringArray|Error)} data type strings (or an error)\n*\n* @example\n* var out = resolve( [ 1, 2, 3 ] );\n* // returns [...]\n*/\nfunction resolve( dtypes ) {\n\tvar out;\n\tvar dt;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < dtypes.length; i++ ) {\n\t\tdt = resolveStr( dtypes[ i ] );\n\t\tif ( dt === null ) {\n\t\t\treturn new TypeError( format( 'invalid argument. Must provide recognized data types. Unable to resolve a data type string. Value: `%s`.', dtypes[ i ] ) );\n\t\t}\n\t\tout.push( dt );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates a list of unary interface signatures from strided array data types.\n*\n* ## Notes\n*\n* -   The function returns a strided array having a stride length of `2` (i.e., every `2` elements define a unary interface signature).\n* -   For each signature (i.e., set of two consecutive non-overlapping strided array elements), the first element is the input data type and the second element is the return data type.\n* -   All signatures follow type promotion rules.\n*\n* @param {Array} dtypes1 - list of supported data types for the first argument\n* @param {Array} dtypes2 - list of supported data types for the output argument\n* @param {Options} [options] - options\n* @param {boolean} [options.enums=false] - boolean flag indicating whether to return signatures as a list of enumeration constants\n* @throws {TypeError} must provide recognized data types\n* @returns {Array} strided array containing unary interface signatures\n*\n* @example\n* var dtypes = [\n*     'float64',\n*     'float32',\n*     'int32',\n*     'uint8'\n* ];\n*\n* var sigs = signatures( dtypes, dtypes );\n* // e.g., returns [ 'float32', 'float32', ... ]\n*/\nfunction signatures( dtypes1, dtypes2, options ) {\n\tvar casts;\n\tvar opts;\n\tvar tmp;\n\tvar out;\n\tvar dt1;\n\tvar dt2;\n\tvar t1;\n\tvar M;\n\tvar i;\n\tvar j;\n\n\tif ( arguments.length > 2 ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\t// Resolve the list of provided data types to data type strings:\n\tdt1 = resolve( dtypes1 );\n\tif ( dt1 instanceof Error ) {\n\t\tthrow dt1;\n\t}\n\tif ( dtypes2 === dtypes1 ) { // don't do work if we don't need to\n\t\tdt2 = dt1;\n\t} else {\n\t\tdt2 = resolve( dtypes2 );\n\t\tif ( dt2 instanceof Error ) {\n\t\t\tthrow dt2;\n\t\t}\n\t}\n\t// Sort the list of return dtypes:\n\tdt2.sort();\n\n\t// Generate the list of signatures...\n\tM = dt1.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tt1 = dt1[ i ];\n\n\t\t// Resolve the list of safe casts for the input dtype:\n\t\tcasts = safeCasts( t1 );\n\t\tif ( casts === null ) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Remove safe casts which are not among the supported output dtypes:\n\t\tcasts = intersection( dt2, casts.sort() );\n\n\t\t// Generate signatures for allowed casts...\n\t\tfor ( j = 0; j < casts.length; j++ ) {\n\t\t\tout.push( t1, casts[ j ] );\n\t\t}\n\t}\n\tif ( opts.enums ) {\n\t\ttmp = [];\n\t\tfor ( i = 0; i < out.length; i++ ) {\n\t\t\ttmp.push( resolveEnum( out[ i ] ) );\n\t\t}\n\t\tout = tmp;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default signatures;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dispatch to a native add-on applying a unary function to an input strided array.\n*\n* @module @stdlib/strided/base/unary-addon-dispatch\n*\n* @example\n* import dispatch from '@stdlib/strided/base/unary-addon-dispatch';\n*\n* function addon( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n*     // Call into native add-on...\n* }\n*\n* function fallback( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n*     // Fallback JavaScript implementation...\n* }\n*\n* // Create a dispatch function:\n* var f = dispatch( addon, fallback );\n*\n* // ...\n*\n* // Invoke the dispatch function with strided array arguments:\n* f( 2, 'generic', [ 1, 2 ], 1, 'generic', [ 0, 0 ], 1 );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolve from './../../../base/dtype-resolve-str';\nimport Complex64 from '@stdlib/complex/float32';\nimport Complex128 from '@stdlib/complex/float64';\nimport wrap from '@stdlib/complex/base/cast-return';\n\n\n// VARIABLES //\n\nvar C64 = 'complex64';\nvar C128 = 'complex128';\nvar CTORS = {\n\t'complex64': Complex64,\n\t'complex128': Complex128\n};\n\n\n// FUNCTIONS //\n\n/**\n* Resolves a callback based on provided dtypes.\n*\n* @private\n* @param {Object} table - callback table\n* @param {Function} table.default - default callback\n* @param {Function} table.complex64 - callback for single-precision complex floating-point numbers\n* @param {Function} table.complex128 - callback for double-precision complex floating-point numbers\n* @param {string} t1 - dtype for input argument\n* @param {string} t2 - dtype for return value\n* @returns {Function} callback\n*/\nfunction resolveCallback( table, t1, t2 ) {\n\t// Signature: ?_z\n\tif ( t2 === C128 ) {\n\t\t// c_z or z_z\n\t\tif ( t1 === C64 || t1 === C128 ) {\n\t\t\t// Always perform computation in higher precision:\n\t\t\treturn table[ C128 ];\n\t\t}\n\t\t// d_z (cast the double-precision return value from `d_d` to a complex number)\n\t\treturn wrap( table.default, 1, CTORS[ t2 ] );\n\t}\n\t// Signature: ?_c\n\tif ( t2 === C64 ) {\n\t\t// c_c\n\t\tif ( t1 === C64 ) {\n\t\t\treturn table[ C64 ];\n\t\t}\n\t\t// z_c\n\t\tif ( t1 === C128 ) {\n\t\t\t// Always perform the computation in higher precision:\n\t\t\treturn table[ C128 ];\n\t\t}\n\t\t// d_c (cast the double-precision return value from `d_d` to a complex number)\n\t\treturn wrap( table.default, 1, CTORS[ t2 ] );\n\t}\n\t// Signature: ?_o\n\tif ( t2 === 'generic' ) {\n\t\t// z_o\n\t\tif ( t1 === C128 ) {\n\t\t\treturn table[ C128 ]; // Signature: z_o_as_z_z\n\t\t}\n\t\t// c_o\n\t\tif ( t1 === C64 ) {\n\t\t\treturn table[ C64 ]; // Signature: c_o_as_c_c\n\t\t}\n\t\t// d_o\n\t\treturn table.default; // Signature: d_o_as_d_d\n\t}\n\treturn table.default;\n}\n\n\n// MAIN //\n\n/**\n* Assigns callbacks to unary interfaces according to type promotion rules.\n*\n* ## Notes\n*\n* -   The function assumes that the provided signature array has the following properties:\n*\n*     -   a strided array having a stride length of `2` (i.e., every `2` elements define a unary interface signature).\n*     -   for each signature (i.e., set of two consecutive non-overlapping strided array elements), the first element is the input data type and the second element is the return data type.\n*     -   all signatures follow type promotion rules.\n*\n* -   Based on type promotion rules, we can simply use the callback for `float64` (i.e., the assumed \"default\") for all interfaces not involving complex numbers, even for `float32`, as we shouldn't need to explicitly downcast strided array values. The only time we need to return `float32` values is when input arrays are already `float32` or of a type which can be safely represented in `float32` without concern for truncation.\n*\n* @param {Object} table - callback table\n* @param {Function} table.default - default callback\n* @param {Function} table.complex64 - callback for single-precision complex floating-point numbers\n* @param {Function} table.complex128 - callback for double-precision complex floating-point numbers\n* @param {ArrayLikeObject} signatures - strided array containing unary interface signatures\n* @returns {Array<Function>} list of callbacks\n*\n* @example\n* import signatures from '@stdlib/strided/base/unary-dtype-signatures';\n* import identity from '@stdlib/math/base/special/identity';\n* import cidentity from '@stdlib/math/base/special/cidentity';\n* import cidentityf from '@stdlib/math/base/special/cidentityf';\n*\n* var dtypes = [\n*     'float64',\n*     'float32',\n*     'int32',\n*     'uint8'\n* ];\n*\n* var sigs = signatures( dtypes, dtypes );\n* // returns [...]\n*\n* var table = {\n*     'default': identity,\n*     'complex64': cidentityf,\n*     'complex128': cidentity\n* };\n*\n* var list = callbacks( table, sigs );\n* // returns [...]\n*/\nfunction callbacks( table, signatures ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < signatures.length; i += 2 ) {\n\t\tt1 = resolve( signatures[ i ] );\n\t\tt2 = resolve( signatures[ i+1 ] );\n\t\tout.push( resolveCallback( table, t1, t2 ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default callbacks;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a double-precision complex floating-point strided input array and assigns results to a double-precision complex floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Complex128Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Complex128Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {Function} fcn - unary function to apply\n* @returns {Complex128Array} `y`\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex128 from '@stdlib/complex/float64';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex128( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex128Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex128Array( x.length );\n*\n* zmap( x.length, x, 1, y, 1, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*/\nfunction zmap( N, x, strideX, y, strideY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty.set( fcn( x.get( ix ) ), iy );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default zmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a unary function to a double-precision floating-point strided input array and assign results to a double-precision floating-point strided output array.\n*\n* @module @stdlib/strided/base/zmap\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex128 from '@stdlib/complex/float64';\n* import zmap from '@stdlib/strided/base/zmap';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex128( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex128Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex128Array( x.length );\n*\n* zmap( x.length, x, 1, y, 1, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex128 from '@stdlib/complex/float64';\n* import zmap from '@stdlib/strided/base/zmap';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex128( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex128Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex128Array( x.length );\n*\n* zmap.ndarray( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to a double-precision complex floating-point strided input array and assigns results to a double-precision complex floating-point strided output array.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Complex128Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Complex128Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @param {Function} fcn - unary function to apply\n* @returns {Complex128Array} `y`\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex128 from '@stdlib/complex/float64';\n*\n* function scale( x ) {\n*     var re = real( x );\n*     var im = imag( x );\n*     return new Complex128( re*10.0, im*10.0 );\n* }\n*\n* var x = new Complex128Array( [ 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0 ] );\n* var y = new Complex128Array( x.length );\n*\n* zmap( x.length, x, 1, 0, y, 1, 0, scale );\n*\n* var v = y.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 10.0\n*/\nfunction zmap( N, x, strideX, offsetX, y, strideY, offsetY, fcn ) {\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty.set( fcn( x.get( ix ) ), iy );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default zmap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: function-object\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name binary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary}\n*/\nimport binary from './../../base/binary';\nsetReadOnly( ns, 'binary', binary );\n\n/**\n* @name binaryAddonDispatch\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary-addon-dispatch}\n*/\nimport binaryAddonDispatch from './../../base/binary-addon-dispatch';\nsetReadOnly( ns, 'binaryAddonDispatch', binaryAddonDispatch );\n\n/**\n* @name binaryDtypeSignatures\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary-dtype-signatures}\n*/\nimport binaryDtypeSignatures from './../../base/binary-dtype-signatures';\nsetReadOnly( ns, 'binaryDtypeSignatures', binaryDtypeSignatures );\n\n/**\n* @name binarySignatureCallbacks\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/binary-signature-callbacks}\n*/\nimport binarySignatureCallbacks from './../../base/binary-signature-callbacks';\nsetReadOnly( ns, 'binarySignatureCallbacks', binarySignatureCallbacks );\n\n/**\n* @name cmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/cmap}\n*/\nimport cmap from './../../base/cmap';\nsetReadOnly( ns, 'cmap', cmap );\n\n/**\n* @name dmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmap}\n*/\nimport dmap from './../../base/dmap';\nsetReadOnly( ns, 'dmap', dmap );\n\n/**\n* @name dmap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmap2}\n*/\nimport dmap2 from './../../base/dmap2';\nsetReadOnly( ns, 'dmap2', dmap2 );\n\n/**\n* @name dmskmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmskmap}\n*/\nimport dmskmap from './../../base/dmskmap';\nsetReadOnly( ns, 'dmskmap', dmskmap );\n\n/**\n* @name dmskmap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dmskmap2}\n*/\nimport dmskmap2 from './../../base/dmskmap2';\nsetReadOnly( ns, 'dmskmap2', dmskmap2 );\n\n/**\n* @name dtypeEnum2Str\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-enum2str}\n*/\nimport dtypeEnum2Str from './../../base/dtype-enum2str';\nsetReadOnly( ns, 'dtypeEnum2Str', dtypeEnum2Str );\n\n/**\n* @name dtypeResolveEnum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-resolve-enum}\n*/\nimport dtypeResolveEnum from './../../base/dtype-resolve-enum';\nsetReadOnly( ns, 'dtypeResolveEnum', dtypeResolveEnum );\n\n/**\n* @name dtypeResolveStr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-resolve-str}\n*/\nimport dtypeResolveStr from './../../base/dtype-resolve-str';\nsetReadOnly( ns, 'dtypeResolveStr', dtypeResolveStr );\n\n/**\n* @name dtypeStr2Enum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/dtype-str2enum}\n*/\nimport dtypeStr2Enum from './../../base/dtype-str2enum';\nsetReadOnly( ns, 'dtypeStr2Enum', dtypeStr2Enum );\n\n/**\n* @name mapBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/map-by}\n*/\nimport mapBy from './../../base/map-by';\nsetReadOnly( ns, 'mapBy', mapBy );\n\n/**\n* @name mapBy2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/map-by2}\n*/\nimport mapBy2 from './../../base/map-by2';\nsetReadOnly( ns, 'mapBy2', mapBy2 );\n\n/**\n* @name maxViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/max-view-buffer-index}\n*/\nimport maxViewBufferIndex from './../../base/max-view-buffer-index';\nsetReadOnly( ns, 'maxViewBufferIndex', maxViewBufferIndex );\n\n/**\n* @name metaDataProps\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/meta-data-props}\n*/\nimport metaDataProps from './../../base/meta-data-props';\nsetReadOnly( ns, 'metaDataProps', metaDataProps );\n\n/**\n* @name minViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/min-view-buffer-index}\n*/\nimport minViewBufferIndex from './../../base/min-view-buffer-index';\nsetReadOnly( ns, 'minViewBufferIndex', minViewBufferIndex );\n\n/**\n* @name mskunary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/mskunary}\n*/\nimport mskunary from './../../base/mskunary';\nsetReadOnly( ns, 'mskunary', mskunary );\n\n/**\n* @name mskunaryAddonDispatch\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/mskunary-addon-dispatch}\n*/\nimport mskunaryAddonDispatch from './../../base/mskunary-addon-dispatch';\nsetReadOnly( ns, 'mskunaryAddonDispatch', mskunaryAddonDispatch );\n\n/**\n* @name mskunaryDtypeSignatures\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/mskunary-dtype-signatures}\n*/\nimport mskunaryDtypeSignatures from './../../base/mskunary-dtype-signatures';\nsetReadOnly( ns, 'mskunaryDtypeSignatures', mskunaryDtypeSignatures );\n\n/**\n* @name mskunarySignatureCallbacks\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/mskunary-signature-callbacks}\n*/\nimport mskunarySignatureCallbacks from './../../base/mskunary-signature-callbacks';\nsetReadOnly( ns, 'mskunarySignatureCallbacks', mskunarySignatureCallbacks );\n\n/**\n* @name nullary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/nullary}\n*/\nimport nullary from './../../base/nullary';\nsetReadOnly( ns, 'nullary', nullary );\n\n/**\n* @name nullaryAddonDispatch\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/nullary-addon-dispatch}\n*/\nimport nullaryAddonDispatch from './../../base/nullary-addon-dispatch';\nsetReadOnly( ns, 'nullaryAddonDispatch', nullaryAddonDispatch );\n\n/**\n* @name offsetView\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/offset-view}\n*/\nimport offsetView from './../../base/offset-view';\nsetReadOnly( ns, 'offsetView', offsetView );\n\n/**\n* @name quaternary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/quaternary}\n*/\nimport quaternary from './../../base/quaternary';\nsetReadOnly( ns, 'quaternary', quaternary );\n\n/**\n* @name quinary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/quinary}\n*/\nimport quinary from './../../base/quinary';\nsetReadOnly( ns, 'quinary', quinary );\n\n/**\n* @name reinterpretComplex64\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/reinterpret-complex64}\n*/\nimport reinterpretComplex64 from './../../base/reinterpret-complex64';\nsetReadOnly( ns, 'reinterpretComplex64', reinterpretComplex64 );\n\n/**\n* @name reinterpretComplex128\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/reinterpret-complex128}\n*/\nimport reinterpretComplex128 from './../../base/reinterpret-complex128';\nsetReadOnly( ns, 'reinterpretComplex128', reinterpretComplex128 );\n\n/**\n* @name smap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smap}\n*/\nimport smap from './../../base/smap';\nsetReadOnly( ns, 'smap', smap );\n\n/**\n* @name smap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smap2}\n*/\nimport smap2 from './../../base/smap2';\nsetReadOnly( ns, 'smap2', smap2 );\n\n/**\n* @name smskmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smskmap}\n*/\nimport smskmap from './../../base/smskmap';\nsetReadOnly( ns, 'smskmap', smskmap );\n\n/**\n* @name smskmap2\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/smskmap2}\n*/\nimport smskmap2 from './../../base/smskmap2';\nsetReadOnly( ns, 'smskmap2', smskmap2 );\n\n/**\n* @name ternary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/ternary}\n*/\nimport ternary from './../../base/ternary';\nsetReadOnly( ns, 'ternary', ternary );\n\n/**\n* @name unary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/unary}\n*/\nimport unary from './../../base/unary';\nsetReadOnly( ns, 'unary', unary );\n\n/**\n* @name unaryAddonDispatch\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/unary-addon-dispatch}\n*/\nimport unaryAddonDispatch from './../../base/unary-addon-dispatch';\nsetReadOnly( ns, 'unaryAddonDispatch', unaryAddonDispatch );\n\n/**\n* @name unaryDtypeSignatures\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/unary-dtype-signatures}\n*/\nimport unaryDtypeSignatures from './../../base/unary-dtype-signatures';\nsetReadOnly( ns, 'unaryDtypeSignatures', unaryDtypeSignatures );\n\n/**\n* @name unarySignatureCallbacks\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/unary-signature-callbacks}\n*/\nimport unarySignatureCallbacks from './../../base/unary-signature-callbacks';\nsetReadOnly( ns, 'unarySignatureCallbacks', unarySignatureCallbacks );\n\n/**\n* @name zmap\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/base/zmap}\n*/\nimport zmap from './../../base/zmap';\nsetReadOnly( ns, 'zmap', zmap );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isObject as isInteger } from './../../is-integer';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nexport default isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the maximum accessible index based on a set of provided strided array parameters.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {NonNegativeInteger} index\n*\n* @example\n* var idx = maxViewBufferIndex( 3, 2, 10 );\n* // returns 14\n*/\nfunction maxViewBufferIndex( N, stride, offset ) {\n\tif ( N > 0 && stride > 0 ) {\n\t\toffset += (N-1) * stride;\n\t}\n\treturn offset;\n}\n\n\n// EXPORTS //\n\nexport default maxViewBufferIndex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport dtypes2signatures from '@stdlib/ndarray/base/dtypes2signatures';\n\n\n// MAIN //\n\n/**\n* Defines non-enumerable read-only properties which expose strided array function meta data.\n*\n* @param {Object} meta - function meta data\n* @param {NonNegativeInteger} meta.nargs - total number of arguments (excluding offsets)\n* @param {NonNegativeInteger} meta.nin - total number of input arrays\n* @param {NonNegativeInteger} meta.nout - total number of output arrays\n* @param {ArrayLikeObject} dtypes - list of strided array data types\n* @param {(Function|Object)} obj - object on which to define properties\n* @param {boolean} bool - boolean indicating whether the provided object should describe an \"ndarray\" function interface\n* @returns {(Function|Object)} object on which properties were defined\n*\n* @example\n* // Define strided array function meta data:\n* var meta = {\n*     'nargs': 7,\n*     'nin': 1,\n*     'nout': 1\n* };\n*\n* // Define the list of strided array data types:\n* var dtypes = [\n*     'float64', 'float64',\n*     'float32', 'float32',\n*     'generic', 'generic'\n* ];\n*\n* // Define an object on which to set the properties:\n* var obj = {};\n*\n* // Set the properties:\n* setProps( meta, dtypes, obj, false );\n*\n* @example\n* // Define strided array function meta data:\n* var meta = {\n*     'nargs': 7,\n*     'nin': 1,\n*     'nout': 1\n* };\n*\n* // Define the list of strided array data types:\n* var dtypes = [\n*     'float64', 'float64',\n*     'float32', 'float32',\n*     'generic', 'generic'\n* ];\n*\n* // Define a function on which to set the properties:\n* function abs( N, dtypeX, x, strideX, dtypeY, y, strideY ) {\n*     // Implementation...\n* }\n*\n* // Set the properties:\n* setProps( meta, dtypes, abs, false );\n*/\nfunction setProps( meta, dtypes, obj, bool ) {\n\t// Define the number of arguments:\n\tif ( bool ) {\n\t\tsetReadOnly( obj, 'nargs', meta.nargs+meta.nin+meta.nout ); // Note: accounts for one offset argument per input/output strided array\n\t} else {\n\t\tsetReadOnly( obj, 'nargs', meta.nargs );\n\t}\n\t// Define the number of input strided arrays:\n\tsetReadOnly( obj, 'nin', meta.nin );\n\n\t// Define the number of output strided arrays:\n\tsetReadOnly( obj, 'nout', meta.nout );\n\n\t// Define a read-only accessor for listing a function's supported array data types:\n\tsetReadOnlyAccessor( obj, 'types', types );\n\n\treturn obj;\n\n\t/**\n\t* Returns a list of strided array interface array type signatures.\n\t*\n\t* @private\n\t* @returns {StringArray} list of signatures\n\t*/\n\tfunction types() {\n\t\treturn dtypes2signatures( dtypes, meta.nin, meta.nout );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default setProps;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from './../../define-property';\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* import isPositiveInteger from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* import { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* import { isObject as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport isPrimitive from './primitive.js';\nimport isObject from './object.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'isPrimitive', isPrimitive );\nsetReadOnly( main, 'isObject', isObject );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only functions.\n*\n* @module @stdlib/assert/is-function-array\n*\n* @example\n* import isFunctionArray from '@stdlib/assert/is-function-array';\n*\n* function beep() {}\n*\n* function boop() {}\n*\n* var bool = isFunctionArray( [ beep, boop ] );\n* // returns true\n*\n* bool = isFunctionArray( [ {}, beep ] );\n* // returns false\n*\n* bool = isFunctionArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nimport arrayfun from './../../tools/array-like-function';\nimport isFunction from './../../is-function';\n\n\n// MAIN //\n\nvar isFunctionArray = arrayfun( isFunction );\n\n\n// EXPORTS //\n\nexport default isFunctionArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLike from './../../../is-array-like';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* import isOdd from '@stdlib/assert/is-odd';\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport MAX_LENGTH from '@stdlib/constants/array/max-array-length';\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\treturn Math.abs( x ); // eslint-disable-line stdlib/no-builtin-math\n}\n\n\n// EXPORTS //\n\nexport default abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the first row index at which a given one-dimensional array of types can be found in a two-dimensional reference array of types (or `-1` if not found).\n*\n* ## Notes\n*\n* -   The intended use case for this function is for type dispatch (i.e., given a set of array data types, find a matching interface according the interface's accepted array data types).\n* -   The function assumes that `x` is stored in row-major order.\n* -   The function assumes that the number of indexed elements in `y` equals the number of columns in `x`.\n* -   The function returns a row index. To convert to a linear index, multiply `strideX1` by the return value.\n*\n* @private\n* @param {NonNegativeInteger} N - number of rows in `x` (size of first dimension)\n* @param {NonNegativeInteger} M - number of columns in `x` (size of second dimension)\n* @param {ArrayLikeObject} x - input two-dimensional reference array\n* @param {integer} strideX1 - `x` stride length along first dimension\n* @param {integer} strideX2 - `x` stride length along second dimension\n* @param {NonNegativeInteger} offsetX - `x` starting index\n* @param {ArrayLikeObject} y - search array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - `y` starting index\n* @returns {integer} row index (if found) and `-1` otherwise\n*\n* @example\n* // Define a reference array to search:\n* var types = [\n*     'float64', 'float64', 'float64',\n*     'float32', 'float32', 'float32',\n*     'uint32', 'uint32', 'float64',\n*     'int32', 'int32', 'float64',\n*     'uint16', 'uint16', 'float64',\n*     'int16', 'int16', 'float64',\n*     'uint8', 'uint8', 'float64',\n*     'int8', 'int8', 'float64'\n* ];\n*\n* // Define reference array dimensions:\n* var N = 8; // rows\n* var M = 3; // columns\n*\n* // Define a search array:\n* y1 = [\n*     'float32', 'float32', 'float32',\n* ];\n*\n* // Find the list of types:\n* var r1 = indexOfTypes( N, M, types, M, 1, 0, y1, 1, 0 );\n* // returns 1\n*\n// Define a search array:\n* y2 = [\n*     'float32', 'float32', 'float64',\n* ];\n*\n* // Find the list of types:\n* var r2 = indexOfTypes( N, M, types, M, 1, 0, y2, 1, 0 );\n* // returns -1\n*/\nfunction indexOfTypes( N, M, x, strideX1, strideX2, offsetX, y, strideY, offsetY ) { // eslint-disable-line max-len\n\tvar ix;\n\tvar iy;\n\tvar i;\n\tvar j;\n\n\t// Search for the first row which matches `y`...\n\tix = offsetX;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tiy = offsetY;\n\t\tfor ( j = 0; j < M; j++ ) {\n\t\t\tif ( x[ ix+(j*strideX2) ] !== y[ iy ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tiy += strideY;\n\t\t}\n\t\t// If we successfully iterated over all columns, then that means we've found a match...\n\t\tif ( j === M ) {\n\t\t\treturn i;\n\t\t}\n\t\tix += strideX1;\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default indexOfTypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isPositiveInteger from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isFunctionArray from '@stdlib/assert/is-function-array';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport abs from '@stdlib/math/base/special/abs';\nimport indexOfTypes from './index_of_types.js';\n\n\n// MAIN //\n\n/**\n* Returns a strided array function interface which performs multiple dispatch.\n*\n* @param {(FunctionArray|Function)} fcns - list of strided array functions\n* @param {Collection} types - one-dimensional list of strided array argument data types\n* @param {(Collection|null)} data - strided array function data (e.g., callbacks)\n* @param {PositiveInteger} nargs - total number of strided array function interface arguments (including data types, strides, and offsets)\n* @param {NonNegativeInteger} nin - number of input strided arrays\n* @param {NonNegativeInteger} nout - number of output strided arrays\n* @throws {TypeError} first argument must be either a function or an array of functions\n* @throws {TypeError} second argument must be an an array-like object\n* @throws {TypeError} third argument must be an array-like object or `null`\n* @throws {Error} third and first arguments must have the same number of elements\n* @throws {TypeError} fourth argument must be a positive integer\n* @throws {TypeError} fifth argument must be a nonnegative integer\n* @throws {TypeError} sixth argument must be a nonnegative integer\n* @throws {Error} fourth argument must be compatible with the specified number of input and output arrays\n* @throws {Error} number of types must match the number of functions times the total number of array arguments for each function\n* @throws {Error} interface must accept at least one strided input and/or output array\n* @returns {Function} strided array function interface\n*\n* @example\n* import unary from '@stdlib/strided/base/unary';\n* import abs from '@stdlib/math/base/special/abs';\n* import Float64Array from '@stdlib/array/float64';\n*\n* var types = [\n*     'float64', 'float64'\n* ];\n*\n* var data = [\n*     abs\n* ];\n*\n* var strided = dispatch( unary, types, data, 7, 1, 1 );\n*\n* // ...\n*\n* var x = new Float64Array( [ -1.0, -2.0, -3.0, -4.0, -5.0 ] );\n* var y = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n*\n* strided( x.length, 'float64', x, 1, 'float64', y, 1 );\n* // y => <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction dispatch( fcns, types, data, nargs, nin, nout ) {\n\tvar strideArgs;\n\tvar hasOffsets;\n\tvar narrays;\n\tvar nfcns;\n\tvar iout;\n\tvar fcn;\n\n\tif ( isFunction( fcns ) ) {\n\t\tfcn = fcns;\n\t} else if ( !isFunctionArray( fcns ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a function or an array of functions. Value: `%s`.', fcns ) );\n\t}\n\tif ( !isCollection( types ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', types ) );\n\t}\n\tif ( !isCollection( data ) && data !== null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an array-like object or null. Value: `%s`.', data ) );\n\t}\n\tif ( !isPositiveInteger( nargs ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a positive integer. Value: `%s`.', nargs ) );\n\t}\n\tif ( !isNonNegativeInteger( nin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.', nin ) );\n\t}\n\tif ( !isNonNegativeInteger( nout ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Sixth argument must be a nonnegative integer. Value: `%s`.', nout ) );\n\t}\n\tnarrays = nin + nout;\n\tif ( narrays === 0 ) {\n\t\tthrow new Error( 'invalid arguments. Interface must accept at least one strided input and/or output array. Based on the provided arguments, `nin+nout` equals `0`.' );\n\t}\n\tif ( fcn ) {\n\t\tnfcns = types.length / narrays;\n\t\tif ( !isInteger( nfcns ) ) {\n\t\t\tthrow new Error( 'invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.' );\n\t\t}\n\t} else {\n\t\tnfcns = fcns.length;\n\t\tif ( types.length !== nfcns*narrays ) {\n\t\t\tthrow new Error( 'invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.' );\n\t\t}\n\t}\n\tif ( data && data.length !== nfcns ) {\n\t\tthrow new Error( 'invalid argument. The third argument must have the same number of elements as the first argument.' );\n\t}\n\t// Determine whether the strided array interface includes offsets:\n\tif ( (narrays*3)+1 === nargs ) {\n\t\thasOffsets = false;\n\t} else if ( (narrays*4)+1 === nargs ) {\n\t\thasOffsets = true;\n\t} else {\n\t\tthrow new Error( 'invalid argument. Fourth argument is incompatible with the number of strided input and output arrays.' );\n\t}\n\t// Determine the \"stride\" for accessing related arguments:\n\tif ( hasOffsets ) {\n\t\tstrideArgs = 4;\n\t} else {\n\t\tstrideArgs = 3;\n\t}\n\t// Compute the index of the first output strided array argument:\n\tiout = ( nin*strideArgs ) + 1;\n\n\treturn dispatcher;\n\n\t/**\n\t* Strided array function interface which performs multiple dispatch.\n\t*\n\t* @private\n\t* @param {integer} N - number of indexed elements\n\t* @param {*} dtypeX - data type for `x`\n\t* @param {Collection} x - strided array\n\t* @param {integer} strideX - index increment for `x`\n\t* @param {...(Collection|integer|NonNegativeInteger)} args - array arguments (data types, arrays, strides, and offsets)\n\t* @throws {Error} insufficient arguments\n\t* @throws {Error} too many arguments\n\t* @throws {TypeError} first argument must be an integer\n\t* @throws {TypeError} input array strides must be integers\n\t* @throws {TypeError} output array strides must be integers\n\t* @throws {TypeError} input array offsets must be nonnegative integers\n\t* @throws {TypeError} output array offsets must be nonnegative integers\n\t* @throws {TypeError} input array arguments must be array-like objects\n\t* @throws {TypeError} output array arguments must be array-like objects\n\t* @throws {RangeError} input array arguments must have sufficient elements based on the associated stride and the number of indexed elements\n\t* @throws {RangeError} output array arguments must have sufficient elements based on the associated stride and the number of indexed elements\n\t* @throws {TypeError} unable to resolve a strided array function supporting the provided array argument data types\n\t* @returns {(Collection|Array<Collection>|void)} destination array(s)\n\t*/\n\tfunction dispatcher() {\n\t\tvar strides;\n\t\tvar offsets;\n\t\tvar arrays;\n\t\tvar dtypes;\n\t\tvar shape;\n\t\tvar argc;\n\t\tvar idx;\n\t\tvar N;\n\t\tvar v;\n\t\tvar f;\n\t\tvar i;\n\t\tvar j;\n\n\t\targc = arguments.length;\n\t\tif ( argc !== nargs ) {\n\t\t\tif ( argc < nargs ) {\n\t\t\t\tthrow new Error( 'invalid invocation. Insufficient arguments.' );\n\t\t\t}\n\t\t\tthrow new Error( 'invalid invocation. Too many arguments.' );\n\t\t}\n\t\tN = arguments[ 0 ];\n\t\tif ( !isInteger( N ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', N ) );\n\t\t}\n\t\tshape = [ N ];\n\n\t\t// data types for both input and output strided arrays are every `strideArgs` arguments beginning from the second argument...\n\t\tdtypes = [];\n\t\tfor ( i = 1; i < nargs; i += strideArgs ) {\n\t\t\tdtypes.push( arguments[ i ] );\n\t\t}\n\n\t\t// Strides for both input and output strided arrays are every `strideArgs` arguments beginning from the fourth argument...\n\t\tstrides = [];\n\t\tfor ( i = 3; i < nargs; i += strideArgs ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( !isInteger( v ) ) {\n\t\t\t\tif ( i < iout ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Input array stride must be an integer. Value: `%s`.', v ) );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Output array stride must be an integer. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstrides.push( v );\n\t\t}\n\t\tif ( hasOffsets ) {\n\t\t\t// Offsets for both input and output strided arrays are every `strideArgs` arguments beginning from the fifth argument...\n\t\t\toffsets = [];\n\t\t\tfor ( i = 4; i < nargs; i += strideArgs ) {\n\t\t\t\tv = arguments[ i ];\n\t\t\t\tif ( !isNonNegativeInteger( v ) ) {\n\t\t\t\t\tif ( i < iout ) {\n\t\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.', v ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.', v ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toffsets.push( v );\n\t\t\t}\n\t\t}\n\t\t// Input and output strided arrays are every `strideArgs` arguments beginning from the third argument...\n\t\tarrays = [];\n\t\tfor ( i = 2; i < nargs; i += strideArgs ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( !isCollection( v ) ) {\n\t\t\t\tif ( i < iout ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Input array must be an array-like object. Value: `%s`.', v ) );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Output array must be an array-like object. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tj = (i-2) / strideArgs;\n\t\t\tif ( hasOffsets ) {\n\t\t\t\tidx = offsets[ j ] + ( (N-1)*strides[j] );\n\t\t\t\tif ( N > 0 && (idx < 0 || idx >= v.length) ) {\n\t\t\t\t\tif ( i < iout ) {\n\t\t\t\t\t\tthrow new RangeError( 'invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements.' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError( 'invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( (N-1)*abs(strides[j]) >= v.length ) {\n\t\t\t\tif ( i < iout ) {\n\t\t\t\t\tthrow new RangeError( 'invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements.' );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new RangeError( 'invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tarrays.push( v );\n\t\t}\n\t\t// Resolve the strided array function satisfying the input array types:\n\t\tidx = indexOfTypes( nfcns, narrays, types, narrays, 1, 0, dtypes, 1, 0 ); // eslint-disable-line max-len\n\n\t\t// Check whether we were able to successfully resolve a strided array function:\n\t\tif ( idx < 0 ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.' );\n\t\t}\n\t\t// Retrieve the strided array function:\n\t\tif ( fcn ) {\n\t\t\tf = fcn;\n\t\t} else {\n\t\t\tf = fcns[ idx ];\n\t\t}\n\t\t// Evaluate the strided array function:\n\t\tif ( data ) {\n\t\t\tif ( hasOffsets ) {\n\t\t\t\tf( arrays, shape, strides, offsets, data[ idx ] );\n\t\t\t} else {\n\t\t\t\tf( arrays, shape, strides, data[ idx ] );\n\t\t\t}\n\t\t} else if ( hasOffsets ) {\n\t\t\tf( arrays, shape, strides, offsets );\n\t\t} else {\n\t\t\tf( arrays, shape, strides );\n\t\t}\n\t\tif ( nout === 1 ) {\n\t\t\treturn arrays[ narrays-1 ];\n\t\t}\n\t\tif ( nout === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\treturn arrays.slice( nin );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default dispatch;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: common, napi\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace strided\n*/\nvar strided = {};\n\n/**\n* @name base\n* @memberof strided\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/strided/base}\n*/\nimport base from './../base';\nsetReadOnly( strided, 'base', base );\n\n/**\n* @name dispatch\n* @memberof strided\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/dispatch}\n*/\nimport dispatch from './../dispatch';\nsetReadOnly( strided, 'dispatch', dispatch );\n\n/**\n* @name dtypes\n* @memberof strided\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/strided/dtypes}\n*/\nimport dtypes from './../dtypes';\nsetReadOnly( strided, 'dtypes', dtypes );\n\n\n// EXPORTS //\n\nexport default strided;\n"],"names":["main","Object","defineProperty","isNumber","value","zeros","n","i","out","zeroPad","str","width","right","negative","pad","length","startsWithMinus","substr","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","formatInteger","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","isString","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","formatDouble","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","spacePad","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","formatInterpolate","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","formatTokenize","content","prev","exec","slice","lastIndex","push","format","args","tokenize","interpolate","apply","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","err","hasDefinePropertySupport","builtin","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","defineProperty$1","setReadOnly","configurable","enumerable","writable","setNonEnumerableReadOnly","getter","x","idx","setter","binary","arrays","shape","strides","fcn","xget","yget","zset","y","z","getAccessor","setAccessor","accessors","sx","sy","sz","ix","iy","iz","N","getIndexed","setIndexed","strided","offsets","isBoolean","FLG","Symbol","hasToStringTagSupport","toStringTag","has","hasOwnProperty","hasOwnProp","property","Sym","toStrTag","nativeClass","hasToStringTag","v","isOwn","tag","Bool","Boolean","test","isPrimitive","isObject","getGlobal","Function","self","window","global","globalThis","root","codegen","getThis","GlobalThis","Self","Win","Global","nodeList","document","childNodes","typedarray","Int8Array","reFunctionName","RE_FUNCTION_NAME","REGEXP","main$5","isObjectLike","constructorName","name","ctor","constructor","_isBuffer","isBuffer","predicate","len","arrayfun","ctorName","type","isFunction","typeOf","main$3","Number","FLOAT64_PINF","POSITIVE_INFINITY","FLOAT64_NINF","NEGATIVE_INFINITY","floor","isInteger","PINF","NINF","isInt","valueOf","isNonNegativeInteger","isTypedArrayLike","BYTES_PER_ELEMENT","byteOffset","byteLength","keys","bool","isArguments","hasArgumentsClass","detect","isNan","isEnumerableProperty","propertyIsEnumerable","hasStringEnumBug","isEnum","isArguments$1","isCollection","arr","searchElement","fromIndex","isConstructorPrototype","w","hasAutomationEqualityBug","k","win","EXCLUDED_KEYS","check","main$2","HAS_BUILTIN","skipConstructor","skipPrototype","isFcn","p","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","HAS_WINDOW","error","NON_ENUMERABLE","getProto","Obj","getPrototypeOf","proto","getProto$1","objectPrototype","isPlainObject","isPrototypeOf","key","ownProps","invert","opts","val","allowDupes","duplicates","objectKeys","dtypes","DTYPES","enumeration","int8","uint8","uint8c","int16","uint16","int32","uint32","int64","uint64","float32","float64","complex64","complex128","generic","notype","userdefined_type","target","source","assign","dt","hash","objectInverse","enum2str","dtype","ENUM","str2enum","resolve","t","hasFloat32Array","Float32Array","GlobalFloat32Array","hasFloat32ArraySupport","Float32Array$1","reinterpret","offset","buffer","hasFloat64Array","Float64Array","GlobalFloat64Array","NaN","hasFloat64ArraySupport","Float64Array$1","COMPLEX64","COMPLEX128","dispatch","addon","fallback","dtypeX","strideX","dtypeY","strideY","dtypeZ","strideZ","viewX","viewY","viewZ","reinterpretComplex64","reinterpretComplex128","offsetView","minViewBufferIndex","stride","offsetX","offsetY","offsetZ","generateFullTable","ntypes","tmp","dt1","dt2","o","PROMOTION_RULES","promotionRules","dtype1","dtype2","TABLE","SAFE_CASTS","generateTable","safeCasts","intersection","list1","list2","M","resolveStr","contains","fround","FLOAT32_VIEW","float64ToFloat32$1","Complex64","real","imag","this","float64ToFloat32","Complex128","re","im","T","wrap","nargs","fcns","C64","C128","CTORS","resolveCallback","table","t1","t2","t3","default","cmap","dmap","dmap2","dmskmap","mask","strideMask","dmskmap2","mapBy","clbk","thisArg","mapBy2","offsetMask","dtypes2signatures","nin","nout","m","RangeError","join","mskunary","mget","yset","sm","dtypeMask","viewMask","r","nullary","xset","quaternary","sw","su","iw","iu","u","quinary","sv","iv","smap","smap2","smskmap","smskmap2","ternary","unary","zmap","ns","isPositiveInteger","binaryAddonDispatch","dtypes1","dtypes2","dtypes3","options","cache","casts","dt3","t4","sort","enums","resolveEnum","signatures","dtypeEnum2Str","dtypeResolveEnum","dtypeResolveStr","dtypeStr2Enum","meta","setReadOnlyAccessor","mskunaryAddonDispatch","nullaryAddonDispatch","unaryAddonDispatch","isFunctionArray","isArrayLike","indexOfTypes","strideX1","strideX2","types","data","strideArgs","hasOffsets","narrays","nfcns","iout","argc"],"mappings":"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"}